{"title":"sass -- css 预处理器","date":"2022-02-18T06:58:00.000Z","date_formatted":{"ll":"Feb 18, 2022","L":"02/18/2022","MM-DD":"02-18"},"link":"workNotes/work/01 scss sass","tags":["css"],"categories":["workNotes"],"updated":"2022-02-18T08:39:00.000Z","content":"<blockquote>\n<p>2022.02.18 在公司熟悉环境时看到用的 cass 所以先去了解</p>\n<p>参考网站 <a href=\"https://www.sass.hk/guide/\">https://www.sass.hk/guide/</a></p>\n<p>介绍：<a href=\"https://juejin.cn/post/6844904169313140749\">https://juejin.cn/post/6844904169313140749</a></p>\n<p>简洁区别：<a href=\"https://juejin.cn/post/6844904086676963341\">https://juejin.cn/post/6844904086676963341</a></p>\n</blockquote>\n<h1 id=\"sass-css-预处理器\">sass css 预处理器<a title=\"#sass-css-预处理器\" href=\"#sass-css-预处理器\"></a></h1>\n<p>CSS 预处理器定义了一种新的语言，其基本思想是，用一种专门的编程语言，为 CSS 增加了一些编程的特性，将 CSS 作为目标生成文件，然后开发者就只要使用这种语言进行CSS的编码工作。</p>\n<h2 id=\"0.1-使用-预处理器的原因\">0.1 使用 预处理器的原因<a title=\"#0.1-使用-预处理器的原因\" href=\"#0.1-使用-预处理器的原因\"></a></h2>\n<p>CSS仅仅是一个标记语言，不可以自定义变量，不可以引用。<br>\n<strong>CSS有具体以下几个缺点：</strong></p>\n<ul>\n<li>语法不够强大，比如无法嵌套书写，导致模块化开发中需要书写很多重复的选择器；</li>\n<li>没有变量和合理的样式复用机制，使得逻辑上相关的属性值必须以字面量的形式重复输出，导致难以维护。</li>\n<li>预编译很容易造成后代选择器的滥用</li>\n</ul>\n<p><strong>使用预处理器的优点:</strong></p>\n<ul>\n<li>提供CSS层缺失的样式层复用机制</li>\n<li>减少冗余代码</li>\n<li>提高样式代码的可维护性</li>\n</ul>\n<p>Sass 和 Less 这类语言，其实可以理解成 <strong>CSS 的超集</strong>，它们在CSS 原本的语法格式基础上，增加了编程语言的特性，如变量的使用、逻辑语句的支持、函数等。让 CSS 代码更容易维护和复用。</p>\n<p>但浏览器最终肯定是只认识 CSS 文件的，它无法处理 CSS 中的那些变量、逻辑语句，<strong>所以需要有一个编译的过程，将 Sass 或 Less 写的代码转换成标准的 CSS 代码，这个过程就称为 CSS 预处理。</strong></p>\n<h2 id=\"0.2-less-&amp;-sass\">0.2 less &amp; sass<a title=\"#0.2-less-&amp;-sass\" href=\"#0.2-less-&amp;-sass\"></a></h2>\n<ul>\n<li>\n<p>Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言。因为 Less 和 CSS 非常像，<strong>Less 仅对 CSS 语言增加了少许方便的扩展，学习很容易</strong> .</p>\n</li>\n<li>\n<p>sass，作为”世界上最成熟、最稳定、最强大的专业级CSS扩展语言”。<strong>兼容所有版本的css，且有无数框架使用sass构建</strong>，如Compass，Bourbon，和Susy。</p>\n</li>\n</ul>\n<blockquote>\n<p>SASS版本3.0之前的后缀名为.sass，而版本3.0之后的后缀名.scss。</p>\n</blockquote>\n<p><strong>相同之处：</strong><br>\n1、混入(Mixins)—class中的class；<br>\n2、参数混入—可以传递参数的class，就像函数一样；<br>\n3、嵌套规则—Class中嵌套class，从而减少重复的代码；<br>\n4、运算—CSS中用上数学；<br>\n5、颜色功能—可以编辑颜色；<br>\n6、名字空间(namespace)—分组样式，从而可以被调用；<br>\n7、作用域—局部修改样式；<br>\n8、JavaScript 赋值—在CSS中使用JavaScript表达式赋值。</p>\n<p><strong>不同之处：</strong></p>\n<blockquote>\n<p>sass less</p>\n</blockquote>\n<ul>\n<li>\n<p>环境: dart或其他  |  基于javascript,可以运行在 Node 或浏览器</p>\n</li>\n<li>\n<p>使用: 复杂  |  简单(相对而言)</p>\n</li>\n<li>\n<p>功能: 复杂  |  简单(相对而言)</p>\n</li>\n<li>\n<p>处理机制: 服务端处理  |  可以运行在 Node 或浏览器端<br>\n变量: 以 $ 开头  |  以 @ 开头<br>\n文件后缀: .sass 或. scss  |  .less</p>\n</li>\n<li>\n<p>在Less中，<strong>仅允许循环数值</strong>。<br>\n在Sass中，我们可以<strong>遍历任何类型的数据</strong>。但在Less中，我们只能使用递归函数循环数值。</p>\n</li>\n<li>\n<p>条件语句<br>\nLess 中并<strong>不支持</strong>条件语句，当然，可以通过内置函数 if 以及 and，or，not 这些来模拟条件语句。<br>\n在 Sass 中是<strong>支持</strong>条件语句的，但也不是像其他编程语言直接 if 这样通过保留字来编写，需要加个 @ 符号</p>\n</li>\n</ul>\n<h2 id=\"1.-使用变量\">1. 使用变量<a title=\"#1.-使用变量\" href=\"#1.-使用变量\"></a></h2>\n<p>sass 使用 <code>$</code> 作为标识变量</p>\n<blockquote>\n<p>老版的 scss 使用 <code>!</code> 作为标识，改变的原因 – 太丑了 ?</p>\n</blockquote>\n<ol>\n<li>声明 引用 <figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    $highlight-<span class=\"attribute\">color</span>: <span class=\"number\">#F90</span>;</span><br><span class=\"line\">    <span class=\"selector-class\">.selected</span> &#123;</span><br><span class=\"line\">        <span class=\"attribute\">border</span>: $highlight-border;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"number\">2</span>. 变量名用中划线 / 下划线</span><br><span class=\"line\">    随便、爱用啥用啥，且 sass 将其视为一样的，都指向一个变量</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">## <span class=\"number\">2</span>. 嵌套 css 规则</span><br><span class=\"line\">~~~css </span><br><span class=\"line\">    <span class=\"selector-id\">#content</span> &#123;</span><br><span class=\"line\">        <span class=\"selector-tag\">article</span> &#123;</span><br><span class=\"line\">            <span class=\"selector-tag\">h1</span> &#123; <span class=\"attribute\">color</span>: <span class=\"number\">#333</span> &#125;</span><br><span class=\"line\">            <span class=\"selector-tag\">p</span> &#123; <span class=\"attribute\">margin-bottom</span>: <span class=\"number\">1.4em</span> &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"selector-tag\">aside</span> &#123; <span class=\"attribute\">background-color</span>: <span class=\"number\">#EEE</span> &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"1.1-父选择器标识符-&amp;\">1.1 父选择器标识符 <code>&amp;</code><a title=\"#1.1-父选择器标识符-&amp;\" href=\"#1.1-父选择器标识符-&amp;\"></a></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">article</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">    &amp;<span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: red &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*编译后*/</span></span><br><span class=\"line\"><span class=\"selector-tag\">article</span> <span class=\"selector-tag\">a</span> &#123; <span class=\"attribute\">color</span>: blue &#125;</span><br><span class=\"line\"><span class=\"selector-tag\">article</span> <span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: red &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1.2-群组选择器-,\">1.2 群组选择器 <code>,</code><a title=\"#1.2-群组选择器-,\" href=\"#1.2-群组选择器-,\"></a></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.container</span> &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">h1</span>, <span class=\"selector-tag\">h2</span>, <span class=\"selector-tag\">h3</span> &#123;<span class=\"attribute\">margin-bottom</span>: .<span class=\"number\">8em</span>&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1.3-子组合选择器和同层组合选择器-&gt;-+-~\">1.3 子组合选择器和同层组合选择器 <code>&gt;</code> <code>+</code> <code>~</code><a title=\"#1.3-子组合选择器和同层组合选择器-&gt;-+-~\" href=\"#1.3-子组合选择器和同层组合选择器-&gt;-+-~\"></a></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 子 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">article</span> &gt; <span class=\"selector-tag\">section</span> &#123; <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 同层相邻组合 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">header</span> + <span class=\"selector-tag\">p</span> &#123; <span class=\"attribute\">font-size</span>: <span class=\"number\">1.1em</span> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 同层全体组合 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">article</span> ~ <span class=\"selector-tag\">article</span> &#123; <span class=\"attribute\">border-top</span>: <span class=\"number\">1px</span> dashed <span class=\"number\">#ccc</span> &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"1.4-嵌套属性\">1.4 嵌套属性<a title=\"#1.4-嵌套属性\" href=\"#1.4-嵌套属性\"></a></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: &#123;</span><br><span class=\"line\">  style: solid;</span><br><span class=\"line\">  <span class=\"attribute\">width</span>: <span class=\"number\">1px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: <span class=\"number\">#ccc</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">nav</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid <span class=\"number\">#ccc</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">right</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3.-导入-sass-文件\">3. 导入 sass 文件<a title=\"#3.-导入-sass-文件\" href=\"#3.-导入-sass-文件\"></a></h2>\n<ul>\n<li>\n<p>css 中不常用的特性：<code>@import</code> 规则，它允许在一个<code>css</code> 文件中导入其他 <code>css</code> 文件。然而，后果是<strong>只有执行到 <code>@import</code> 时，浏览器才会去下载其他 <code>css</code> 文件，这导致页面加载起来特别慢。</strong></p>\n</li>\n<li>\n<p>sass也有一个@import规则，但不同的是，sass的@import规则在生成css文件时就把相关文件导入进来。这意味着所有相关的样式被归纳到了同一个css文件中，而无需发起额外的下载请求。</p>\n</li>\n</ul>\n<h3 id=\"3.1-局部文件-/-部分文件\">3.1 局部文件 / 部分文件<a title=\"#3.1-局部文件-/-部分文件\" href=\"#3.1-局部文件-/-部分文件\"></a></h3>\n<p>当通过@import把sass样式分散到多个文件时，你通常只想生成少数几个css文件。那些专门为@import命令而编写的sass文件，并不需要生成对应的独立css文件，这样的sass文件称为<strong>局部文件</strong>。</p>\n<p>此约定即，<strong>sass局部文件的文件名以下划线开头</strong>。这样，sass就不会在编译时单独编译这个文件输出css，而只把这个文件用作导入。当你@import一个局部文件时，还可以不写文件的全名，即省略文件名开头的下划线。</p>\n<h3 id=\"3.2-默认变量值-!default\">3.2 默认变量值 <code>!default</code><a title=\"#3.2-默认变量值-!default\" href=\"#3.2-默认变量值-!default\"></a></h3>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$fancybox-<span class=\"attribute\">width</span>: <span class=\"number\">400px</span> !default;</span><br><span class=\"line\"><span class=\"selector-class\">.fancybox</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: $fancybox-width;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>如果用户在导入你的sass局部文件之前声明了一个<code>$fancybox-width</code>变量，那么你的局部文件中对<code>$fancybox-width</code>赋值<code>400px</code>的操作就无效。如果用户没有做这样的声明，则<code>$fancybox-width</code>将默认为<code>400px</code>。</p>\n</blockquote>\n<h3 id=\"3.3-嵌套导入\">3.3 嵌套导入<a title=\"#3.3-嵌套导入\" href=\"#3.3-嵌套导入\"></a></h3>\n<p>跟原生的css不同，sass允许@import命令写在css规则内。这种导入方式下，生成对应的css文件时，局部文件会被直接插入到css规则内导入它的地方</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*  blue-theme 文件 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">aside</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background</span>: blue;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 使用文件 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.blue-theme</span> &#123;<span class=\"keyword\">@import</span> <span class=\"string\">&quot;blue-theme&quot;</span>&#125;</span><br><span class=\"line\">.blue-theme &#123;</span><br><span class=\"line\">  <span class=\"selector-tag\">aside</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: blue;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.4-原生-css-导入\">3.4 原生 css 导入<a title=\"#3.4-原生-css-导入\" href=\"#3.4-原生-css-导入\"></a></h3>\n<p>由于sass兼容原生的css，所以它也支持原生的CSS <code>@import</code>。<br>\n尽管通常在sass中使用<code>@import</code>时，sass会尝试找到对应的sass文件并导入进来，但在下列三种情况下会生成原生的CSS<code>@import</code>，这会造成浏览器解析css时的额外下载：</p>\n<ul>\n<li>被导入文件的名字以.css结尾；</li>\n<li>被导入文件的名字是一个URL地址（比如http://www.sass.hk/css/css.css），由此可用谷歌字体API提供的相应服务；</li>\n<li>被导入文件的名字是CSS的url()值。</li>\n</ul>\n<p>so 不能用sass的@import直接导入一个原始的css文件，因为sass会认为你想用css原生的@import。</p>\n<p>但是，因为sass的语法完全兼容css，所以你可以<strong>把原始的css文件改名为.scss后缀，即可直接导入了</strong></p>\n<h2 id=\"4.-静默注释\">4. 静默注释<a title=\"#4.-静默注释\" href=\"#4.-静默注释\"></a></h2>\n<p>sass 提供了一种不同于 css 标准的注释格式 <code>//</code> , 在编译成 css 后，这些用 <code>//</code> 的注释语句都会被抹去</p>\n<h2 id=\"5.-混合器-@mixin-@include\">5. 混合器 <code>@mixin</code> <code>@include</code><a title=\"#5.-混合器-@mixin-@include\" href=\"#5.-混合器-@mixin-@include\"></a></h2>\n<p>需要大段大段的重用样式的代码，可以通过sass的混合器实现大段样式的重用。</p>\n<p>混合器使用<code>@mixin</code>标识符定义。这个标识符给一大段样式赋予一个名字，可以通过引用这个名字重用这段样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> rounded-corners &#123;</span><br><span class=\"line\">  -moz-<span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  -webkit-<span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">  <span class=\"attribute\">border-radius</span>: <span class=\"number\">5px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">notice &#123;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: green;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">2px</span> solid <span class=\"number\">#00aa00</span>;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> rounded-corners;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* less */</span></span><br><span class=\"line\"><span class=\"selector-class\">.post</span> <span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">  rounded-corners();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5.1-使用混合器的时间\">5.1 使用混合器的时间<a title=\"#5.1-使用混合器的时间\" href=\"#5.1-使用混合器的时间\"></a></h3>\n<p>混合器是在样式表中应用的。混合器是展示性的描述，用来描述一条css规则应用之后会产生怎样的效果。</p>\n<p>混合器和类配合使用写出整洁的html和css，因为使用语义化的类名亦可以帮你避免重复使用混合器。</p>\n<h3 id=\"5.2-混合器中css规则\">5.2 混合器中css规则<a title=\"#5.2-混合器中css规则\" href=\"#5.2-混合器中css规则\"></a></h3>\n<p>不仅可以包含属性，也可以包含css规则，包含选择器和选择器中的属性</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> no-bullets &#123;</span><br><span class=\"line\">  <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">  <span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-image</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">list-style-type</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">margin-left</span>: <span class=\"number\">0px</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5.3-给混合器传参\">5.3 给混合器传参<a title=\"#5.3-给混合器传参\" href=\"#5.3-给混合器传参\"></a></h3>\n<p>可以通过在@include混合器时给混合器传参，来定制混合器生成的精确样式</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> link-colors($normal, $<span class=\"attribute\">hover</span>, $visited) &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: $normal;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: $hover; &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:visited</span> &#123; <span class=\"attribute\">color</span>: $visited; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@include</span> link-colors(blue, red, green);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 通过$name: value的形式指定每个参数的值 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">@include</span> link-colors(</span><br><span class=\"line\">      $<span class=\"attribute\">normal</span>: blue,</span><br><span class=\"line\">      $<span class=\"attribute\">visited</span>: green,</span><br><span class=\"line\">      $<span class=\"attribute\">hover</span>: red</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5.4-默认参数值\">5.4 默认参数值<a title=\"#5.4-默认参数值\" href=\"#5.4-默认参数值\"></a></h3>\n<p>参数默认值使用$name: default-value的声明形式，默认值可以是任何有效的css属性值，甚至是其他参数的引用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@mixin</span> link-colors(</span><br><span class=\"line\">    $normal,</span><br><span class=\"line\">    $<span class=\"attribute\">hover</span>: $normal,</span><br><span class=\"line\">    $<span class=\"attribute\">visited</span>: $normal</span><br><span class=\"line\">  )&#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: $normal;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:hover</span> &#123; <span class=\"attribute\">color</span>: $hover; &#125;</span><br><span class=\"line\">  &amp;<span class=\"selector-pseudo\">:visited</span> &#123; <span class=\"attribute\">color</span>: $visited; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"6.-使用选择器继承-@extend\">6. 使用选择器继承 <code>@extend</code><a title=\"#6.-使用选择器继承-@extend\" href=\"#6.-使用选择器继承-@extend\"></a></h2>\n<blockquote>\n<p>if 想重用语义化</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.error</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">border</span>: <span class=\"number\">1px</span> solid red;</span><br><span class=\"line\">  <span class=\"attribute\">background-color</span>: <span class=\"number\">#fdd</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.seriousError</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> .error;</span><br><span class=\"line\">  <span class=\"attribute\">border-width</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><code>.seriousError</code>将会继承样式表中任何位置处为<code>.error</code>定义的所有样式<br>\n==<br>\n以<code>class=&quot;seriousError&quot;</code> 修饰的html元素最终的展示效果就好像是<code>class=&quot;seriousError error&quot;</code>。</p>\n</blockquote>\n<h3 id=\"6.1-什么时候使用继承\">6.1 什么时候使用继承<a title=\"#6.1-什么时候使用继承\" href=\"#6.1-什么时候使用继承\"></a></h3>\n<p><strong>混合器</strong>主要用于展示性样式的重用，而类名用于语义化样式的重用。因为<strong>继承是基于类</strong>的（有时是基于其他类型的选择器），所以继承应该是建立在语义化的关系上。</p>\n<h3 id=\"6.2-继承的高级用法\">6.2 继承的高级用法<a title=\"#6.2-继承的高级用法\" href=\"#6.2-继承的高级用法\"></a></h3>\n<p>最常用的一种高级用法是继承一个html元素的样式。尽管默认的浏览器样式不会被继承，因为它们不属于样式表中的样式，但是你对html元素添加的所有样式都会被继承</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.disabled</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: gray;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.disabled</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: gray;</span><br><span class=\"line\">  <span class=\"keyword\">@extend</span> a;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>if 一条样式规则继承了一个复杂的选择器，那么它只会继承这个复杂选择器命中的元素所应用的样式</p>\n</blockquote>\n<h3 id=\"6.3-继承的工作细节\">6.3 继承的工作细节<a title=\"#6.3-继承的工作细节\" href=\"#6.3-继承的工作细节\"></a></h3>\n<p><code>@extend</code>背后最基本的想法是:<br>\n如果<code>.seriousError @extend .error</code>， 那么样式表中的任何一处<code>.error</code>都用<code>.error.seriousError</code>这一选择器组进行替换。这就意味着相关样式会如预期那样应用到<code>.error</code>和<code>.seriousError</code></p>\n<blockquote>\n<ul>\n<li>跟混合器相比，<strong>继承生成的css代码相对更少</strong>。<br>\n因为<strong>继承仅仅是重复选择器，而不会重复属性</strong>，所以使用继承往往比混合器生成的css体积更小。如果你非常关心你站点的速度，请牢记这一点。</li>\n</ul>\n</blockquote>\n<ul>\n<li><strong>继承遵从css层叠</strong>的规则。当两个不同的css规则应用到同一个html元素上时，并且这两个不同的css规则对同一属性的修饰存在不同的值，根据权重选择。</li>\n<li><strong>混合器本身不会引起css层叠的问题</strong>，因为混合器把样式直接放到了css规则中，而继承存在样式层叠的问题。被继承的样式会保持原有定义位置和选择器权重不变。</li>\n</ul>\n","prev":{"title":"单页面应用","link":"workNotes/work/02 spa优缺点"},"next":{"title":"WEB 开发的安全之旅 - 字节青训营","link":"learningNotes/ByteDance/10 刘宇晨 web 开发的安全之旅"},"plink":"https://shylees.github.io/workNotes/work/01 scss sass/","toc":[{"id":"sass-css-预处理器","title":"sass css 预处理器","index":"1","children":[{"id":"0.1-使用-预处理器的原因","title":"0.1 使用 预处理器的原因","index":"1.1"},{"id":"0.2-less-&-sass","title":"0.2 less &amp; sass","index":"1.2"},{"id":"1.-使用变量","title":"1. 使用变量","index":"1.3","children":[{"id":"1.1-父选择器标识符-&","title":"1.1 父选择器标识符 &amp;","index":"1.3.1"},{"id":"1.2-群组选择器-,","title":"1.2 群组选择器 ,","index":"1.3.2"},{"id":"1.3-子组合选择器和同层组合选择器->-+-~","title":"1.3 子组合选择器和同层组合选择器 &gt; + ~","index":"1.3.3"},{"id":"1.4-嵌套属性","title":"1.4 嵌套属性","index":"1.3.4"}]},{"id":"3.-导入-sass-文件","title":"3. 导入 sass 文件","index":"1.4","children":[{"id":"3.1-局部文件-/-部分文件","title":"3.1 局部文件 &#x2F; 部分文件","index":"1.4.1"},{"id":"3.2-默认变量值-!default","title":"3.2 默认变量值 !default","index":"1.4.2"},{"id":"3.3-嵌套导入","title":"3.3 嵌套导入","index":"1.4.3"},{"id":"3.4-原生-css-导入","title":"3.4 原生 css 导入","index":"1.4.4"}]},{"id":"4.-静默注释","title":"4. 静默注释","index":"1.5"},{"id":"5.-混合器-@mixin-@include","title":"5. 混合器 @mixin @include","index":"1.6","children":[{"id":"5.1-使用混合器的时间","title":"5.1 使用混合器的时间","index":"1.6.1"},{"id":"5.2-混合器中css规则","title":"5.2 混合器中css规则","index":"1.6.2"},{"id":"5.3-给混合器传参","title":"5.3 给混合器传参","index":"1.6.3"},{"id":"5.4-默认参数值","title":"5.4 默认参数值","index":"1.6.4"}]},{"id":"6.-使用选择器继承-@extend","title":"6. 使用选择器继承 @extend","index":"1.7","children":[{"id":"6.1-什么时候使用继承","title":"6.1 什么时候使用继承","index":"1.7.1"},{"id":"6.2-继承的高级用法","title":"6.2 继承的高级用法","index":"1.7.2"},{"id":"6.3-继承的工作细节","title":"6.3 继承的工作细节","index":"1.7.3"}]}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"2947 words in 15 min"}