{"title":"视差滚动","date":"2021-11-11T16:00:00.000Z","date_formatted":{"ll":"Nov 12, 2021","L":"11/12/2021","MM-DD":"11-12"},"link":"furtherNotes/further/03 视差滚动","tags":["css"],"categories":["furtherNotes"],"updated":"2021-11-11T16:00:00.000Z","content":"<h3 id=\"1.-简介\">1. 简介<a title=\"#1.-简介\" href=\"#1.-简介\"></a></h3>\n<p><strong>视差滚动</strong>（Parallax Scrolling）是指让多层背景以不同的速度移动，形成立体的运动效果，带来非常出色的视觉体验。 作为网页设计的热点趋势，越来越多的网站应用了这项技术。</p>\n<h3 id=\"2.-css-background-attachment\">2. css background-attachment<a title=\"#2.-css-background-attachment\" href=\"#2.-css-background-attachment\"></a></h3>\n<p><code>background-attachment</code>：决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动</p>\n<ul>\n<li>\n<p><strong>scroll</strong> ( 默认 ) : 背景相对于元素本身固定，而不是随着内容滚动</p>\n<blockquote>\n<p>背景铺满 元素盒子可视位置，内容溢出 流动条，拉滚动条，背景不动，只动内容</p>\n</blockquote>\n</li>\n<li>\n<p><strong>local</strong>：背景相对于元素的内容固定。背景会随着元素内容滚动，并且背景的绘制区域和定位区域是相对于可滚动的区域而不是包含他们的边框。</p>\n<blockquote>\n<p>背景铺满  元素可视 or 流动条隐藏部分，相当于内容与背景的相对位置静止。</p>\n</blockquote>\n</li>\n<li>\n<p><strong>fixed</strong>：背景相对于视口固定。背景不会随着元素的内容滚动。</p>\n</li>\n</ul>\n<p>视察滚动的实现：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.g-img</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-image</span>: <span class=\"built_in\">url</span>(<span class=\"string\">...</span>);</span><br><span class=\"line\">    <span class=\"attribute\">background-attachment</span>: fixed;</span><br><span class=\"line\">    <span class=\"attribute\">background-size</span>: cover;</span><br><span class=\"line\">    <span class=\"attribute\">background-position</span>: center center;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3.-transform：translate3d\">3. transform：translate3d<a title=\"#3.-transform：translate3d\" href=\"#3.-transform：translate3d\"></a></h3>\n<ol>\n<li>\n<p>我们给容器设置上 <code>transform-style: preserve-3d</code> 和 <code>perspective: xpx</code>，那么处于这个容器的子元素就将位于3D空间中，</p>\n</li>\n<li>\n<p>再给子元素设置不同的 <code>transform: translateZ()</code>，这个时候，不同元素在 3D Z轴方向距离屏幕（我们的眼睛）的距离也就不一样</p>\n</li>\n<li>\n<p>滚动滚动条，由于子元素设置了不同的 <code>transform: translateZ()</code>，那么他们滚动的上下距离 <code>translateY</code> 相对屏幕（我们的眼睛），也是不一样的，这就达到了滚动视差的效果。</p>\n</li>\n</ol>\n","prev":{"title":"HTTP 常见状态码 - 图解http","link":"furtherNotes/further/02 常见状态码"},"next":{"title":"展开讲讲红宝书提到的“es中...按值传递”","link":"furtherNotes/further/01 es 中函数的参数都是按值传递的"},"plink":"https://shylees.github.io/furtherNotes/further/03 视差滚动/","toc":[{"id":"1.-简介","title":"1. 简介","index":"1"},{"id":"2.-css-background-attachment","title":"2. css background-attachment","index":"2"},{"id":"3.-transform：translate3d","title":"3. transform：translate3d","index":"3"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"438 words in 2 min"}