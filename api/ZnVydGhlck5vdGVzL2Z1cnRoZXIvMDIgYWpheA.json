{"title":"Ajax","date":"2021-11-10T16:00:00.000Z","date_formatted":{"ll":"Nov 11, 2021","L":"11/11/2021","MM-DD":"11-11"},"link":"furtherNotes/further/02 ajax","tags":["JS"],"categories":["furtherNotes"],"updated":"2021-11-10T16:00:00.000Z","content":"<h2 id=\"ajax\">Ajax<a title=\"#ajax\" href=\"#ajax\"></a></h2>\n<h3 id=\"1.简介\">1.简介<a title=\"#1.简介\" href=\"#1.简介\"></a></h3>\n<p>ajax(asynchronous javascript and xml) 异步 js 与 xml</p>\n<p>一种创建交互式网页应用的网页开发技术</p>\n<p>使用异步方式与服务器通信，不需要打断用户操作</p>\n<p>在不刷新整个网页情况下，与服务器通信交互</p>\n<h3 id=\"2.-特点\">2. 特点<a title=\"#2.-特点\" href=\"#2.-特点\"></a></h3>\n<ul>\n<li>\n<p>优点：可以不刷新页面与服务端进行通信</p>\n<p>​           允许根据用户事件来更新部分页面内容</p>\n</li>\n<li>\n<p>缺点：没有浏览记录，不能回退</p>\n<p>​            存在同源跨域问题</p>\n<p>​             seo不友好</p>\n</li>\n</ul>\n<h3 id=\"3.-原生ajax使用\">3. 原生ajax使用<a title=\"#3.-原生ajax使用\" href=\"#3.-原生ajax使用\"></a></h3>\n<ol>\n<li>\n<p>创建对象</p>\n</li>\n<li>\n<p>初始化 设置请求方法和url</p>\n</li>\n<li>\n<p>发送 设置参数</p>\n<blockquote>\n<p>get：请求数据拼在 url 中</p>\n<p>post：设置请求头 格式内容 + 请求数据放在 send 里</p>\n<p>​           xhr.setRequestHeader(“Content-type”,“application/x-www-form-urlencoded”);</p>\n</blockquote>\n</li>\n<li>\n<p>事件绑定 处理服务端返回结果</p>\n</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> xml = <span class=\"keyword\">new</span> <span class=\"title class_\">XMLHttpRequest</span>();</span><br><span class=\"line\">xhr.<span class=\"property\">responseType</span> = <span class=\"string\">&#x27;json&#x27;</span>;   <span class=\"comment\">// open前 设置响应体数据</span></span><br><span class=\"line\">xhr.<span class=\"property\">timeout</span> = <span class=\"number\">2000</span>;</span><br><span class=\"line\">xhr.<span class=\"property\">ontimeout</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;...&#125;</span><br><span class=\"line\">xhr.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;...&#125;</span><br><span class=\"line\">xhr.<span class=\"title function_\">open</span>(<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;http://....&#x27;</span>);</span><br><span class=\"line\">xhr.<span class=\"title function_\">send</span>();</span><br><span class=\"line\">xhr.<span class=\"property\">onreadystatechange</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(xhr.<span class=\"property\">readyState</span> == <span class=\"number\">4</span> &amp;&amp; xhr.<span class=\"property\">status</span> == <span class=\"number\">200</span>)&#123;</span><br><span class=\"line\">        xhr.<span class=\"property\">status</span>; <span class=\"comment\">//状态码</span></span><br><span class=\"line\">        xhr.<span class=\"property\">statusText</span>; <span class=\"comment\">//状态码字符串</span></span><br><span class=\"line\">        xhr.<span class=\"title function_\">getAllResponseHeaders</span>();  <span class=\"comment\">//所有响应头</span></span><br><span class=\"line\">        xhr.<span class=\"property\">response</span>; <span class=\"comment\">//响应体</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>xhr.abort()</p>\n</blockquote>\n<h3 id=\"4.-readystate\">4. readyState<a title=\"#4.-readystate\" href=\"#4.-readystate\"></a></h3>\n<p>表示请求发送的状态 0 1 2 3 4</p>\n<p>0：未初始化 — 初始状态</p>\n<p>1：启动 — open后</p>\n<p>2：发送 — send后</p>\n<p>3：接收 — 返回了部分数据</p>\n<p>4：完成 — 返回了所有数据</p>\n","prev":{"title":"展开讲讲红宝书提到的“es中...按值传递”","link":"furtherNotes/further/01 es 中函数的参数都是按值传递的"},"next":{"title":"模块化历程","link":"furtherNotes/further/01 模块化历程"},"plink":"https://shylees.github.io/furtherNotes/further/02 ajax/","toc":[{"id":"ajax","title":"Ajax","index":"1","children":[{"id":"1.简介","title":"1.简介","index":"1.1"},{"id":"2.-特点","title":"2. 特点","index":"1.2"},{"id":"3.-原生ajax使用","title":"3. 原生ajax使用","index":"1.3"},{"id":"4.-readystate","title":"4. readyState","index":"1.4"}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"351 words in 2 min"}