{"title":"浅浅了解闭包","date":"2022-03-02T03:49:00.000Z","date_formatted":{"ll":"Mar 2, 2022","L":"03/02/2022","MM-DD":"03-02"},"link":"workNotes/work/09 闭包","tags":["JS","闭包"],"categories":["workNotes"],"updated":"2022-03-02T06:03:00.000Z","content":"<blockquote>\n<p>2022.03.02 周三</p>\n<p>参考链接：<a href=\"https://github.com/lgwebdream/FE-Interview/issues/17\">https://github.com/lgwebdream/FE-Interview/issues/17</a></p>\n</blockquote>\n<h2 id=\"对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景\">对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景<a title=\"#对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景\" href=\"#对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景\"></a></h2>\n<h3 id=\"闭包是什么？\">闭包是什么？<a title=\"#闭包是什么？\" href=\"#闭包是什么？\"></a></h3>\n<p>函数执行后返回结果是一个内部函数，并被外部变量所引用，如果内部函数持有被执行函数作用域的变量，就形成了闭包。</p>\n<blockquote>\n<p>简而言之：可以在内部函数访问到外部函数的作用域。</p>\n</blockquote>\n<p>使用闭包的作用：</p>\n<ol>\n<li>读取函数中的变量</li>\n<li>将函数中的变量存储在内存中，保护变量不被污染。\n<blockquote>\n<p>因此，会对内存有消耗，所以不可以滥用闭包，否则会影响网页性能，造成内存泄漏。<br>\n在不需要使用闭包时，要及时释放内存，可以将内层函数对象的变量赋值为 null</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"闭包原理\">闭包原理<a title=\"#闭包原理\" href=\"#闭包原理\"></a></h3>\n<p>函数执行分成两个阶段：预编译阶段 和 执行阶段</p>\n<ol>\n<li>预编译阶段，如果发现内部函数使用了外部函数的变量，则会在内存中创建一个“闭包”对象并保存对应变量，如果已存在“闭包”，就只需要增加对应的属性值即可。</li>\n<li>执行完后，函数执行上下文会被销毁，函数对“闭包”对象的引用也会被销毁，但内部函数还持有该“闭包”的引用，所以内部函数可以继续使用外部函数中的变量</li>\n</ol>\n<blockquote>\n<p>利用函数作用域链的特性，一个函数<strong>内部定义的函数</strong> 会将包含的 <strong>外部函数的活动对象</strong> 添加到它的作用域中，函数执行完毕，其函数执行作用域链销毁；但因为 <strong>内部函数的作用域链</strong> 仍然<strong>在引用</strong>这个活动对象，所以其活动对象不会被销毁，直至内部函数被销毁后才被销毁。</p>\n</blockquote>\n<h3 id=\"优点\">优点<a title=\"#优点\" href=\"#优点\"></a></h3>\n<ul>\n<li>可以从内部函数访问外部函数的作用域中的变量，且访问到的变量长期存储在内存中，可供后面使用</li>\n<li>避免变量污染全局</li>\n<li>把变量存在独立的作用域，作为私有成员存在</li>\n</ul>\n<h3 id=\"缺点\">缺点<a title=\"#缺点\" href=\"#缺点\"></a></h3>\n<ul>\n<li>对内存消耗有负面影响，因内部函数保存了对外部变量的引用，导致无法被垃圾回收，增大内存使用量，所以使用不当会导致内存泄漏。</li>\n<li>对处理速度具有负面影响。闭包的层级决定了引用的外部变量在查找时经过的作用域链的长度</li>\n<li>可能获取到意外的值 captured value</li>\n</ul>\n<h3 id=\"应用场景\">应用场景<a title=\"#应用场景\" href=\"#应用场景\"></a></h3>\n<ol>\n<li>模块封装；在各模块规范出现之前，都是用这样的方式防止变量污染全局</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> bar = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> foo = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">function</span> <span class=\"title function_\">bar</span>(<span class=\"params\"></span>) &#123;&#125;</span><br><span class=\"line\">  bar.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">ddd</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">ddd</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> foo;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> bar;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在循环中创建闭包，防止取到意外的值</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">foo</span>(<span class=\"params\">num</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">3</span> ; i++&gt;)&#123;</span><br><span class=\"line\">  <span class=\"title function_\">foo</span>(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","prev":{"title":"TCP三次握手、四次挥手","link":"furtherNotes/further/02 tcp三次握手四次挥手"},"next":{"title":"关于 v-html 内样式不生效","link":"workNotes/work/07 v-html 样式不生效"},"plink":"https://shylees.github.io/workNotes/work/09 闭包/","toc":[{"id":"对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景","title":"对闭包的看法，为什么要用闭包？说一下闭包原理以及应用场景","index":"1","children":[{"id":"闭包是什么？","title":"闭包是什么？","index":"1.1"},{"id":"闭包原理","title":"闭包原理","index":"1.2"},{"id":"优点","title":"优点","index":"1.3"},{"id":"缺点","title":"缺点","index":"1.4"},{"id":"应用场景","title":"应用场景","index":"1.5"}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"771 words in 4 min"}