{"title":"浏览器存储详细版","date":"2021-11-19T16:00:00.000Z","date_formatted":{"ll":"Nov 20, 2021","L":"11/20/2021","MM-DD":"11-20"},"link":"furtherNotes/further/01 浏览器存储","tags":["JS","计网"],"categories":["furtherNotes"],"updated":"2021-11-19T16:00:00.000Z","content":"<blockquote>\n<p>由cwenjoy 项目中使用到的 localStorage 引申出来的</p>\n<p><a href=\"https://www.jianshu.com/p/072e17112759\">https://www.jianshu.com/p/072e17112759</a></p>\n</blockquote>\n<h2 id=\"浏览器存储\">浏览器存储<a title=\"#浏览器存储\" href=\"#浏览器存储\"></a></h2>\n<h3 id=\"常见的浏览器数据存储方案\">常见的浏览器数据存储方案<a title=\"#常见的浏览器数据存储方案\" href=\"#常见的浏览器数据存储方案\"></a></h3>\n<ol>\n<li>Cookie</li>\n<li>Web 存储 ：localStorage 和 sessionStorage</li>\n<li>IndexedDB</li>\n</ol>\n<h4 id=\"1.-cookie\">1. Cookie<a title=\"#1.-cookie\" href=\"#1.-cookie\"></a></h4>\n<h5 id=\"1.1-简介\">1.1 简介<a title=\"#1.1-简介\" href=\"#1.1-简介\"></a></h5>\n<p>Cookie 又称 HTTP Cookie，最初在客户端用于存储会话信息，从底层看，其作为 HTTP 协议的一种扩展实现，Cookie 数据会自动在 Web 浏览器和 Web 服务器之间传输，因此在服务器端脚本可以读写存储的 cookie 值，因此 Cookie 通常用户存储一些通用的数据。</p>\n<h5 id=\"1.2-优点\">1.2 优点<a title=\"#1.2-优点\" href=\"#1.2-优点\"></a></h5>\n<p>相比于其他的存储方式， Cookie 的兼容性很好</p>\n<h5 id=\"1.3-缺点\">1.3 缺点<a title=\"#1.3-缺点\" href=\"#1.3-缺点\"></a></h5>\n<ul>\n<li><strong>存储量小</strong>，在不同的浏览器上基本都是 4kb 大小</li>\n<li><strong>影响性能</strong>，Cookie 会由浏览器作为请求头发送，当 Cookie 存储信息过多时，会影响特定域的资源获取效率，增加文件传输的负载</li>\n<li><strong>只能存储字符串</strong></li>\n<li><strong>安全问题</strong>，存储在 Cookie 的任何数据可以被他人访问，因此不能再 Cookie 中存储重要信息</li>\n<li>因为第三方滥用 Cookie，所以很多人再浏览网页时会禁用 Cookie，所以得测试用户是否支持 Cookie</li>\n</ul>\n<h5 id=\"1.4-操作\">1.4 操作<a title=\"#1.4-操作\" href=\"#1.4-操作\"></a></h5>\n<p>基本操作：读取、写入、删除。</p>\n<p>cookie 中所有的名字和值都是经过 URI 编码的，所以必须使用 decodeURICompoent来进行解码才能得到 cookie 的值。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">CookieUtil</span> = &#123;</span><br><span class=\"line\">    <span class=\"comment\">// get可根据cookie的名字获取相应的值</span></span><br><span class=\"line\">    <span class=\"attr\">get</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> cookieName = encodeURIcOMPONET(name) + <span class=\"string\">&quot;=&quot;</span>,</span><br><span class=\"line\">               cookieStart = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">indexOf</span>(cookieName),</span><br><span class=\"line\">               cookieValue = <span class=\"literal\">null</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cookieStart &gt; -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">const</span> cookieEnd = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">indexOf</span>(<span class=\"string\">&quot;;&quot;</span>, cookieStart)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(cookieEnd == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                cookieEnd = <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"property\">length</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cookieValue = decodeURICompoent(<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>.<span class=\"title function_\">substring</span>(cookieStart + cookieName.<span class=\"property\">length</span>, cookieEnd))  </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cookieValue</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// set设置一个cookie</span></span><br><span class=\"line\">    <span class=\"attr\">set</span>: <span class=\"keyword\">function</span>(<span class=\"params\">name, value, expires, path, domain, secure</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> cookieText = encodeURIComponet(name)+<span class=\"string\">&quot;=&quot;</span>+encodeURIComponet(value)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(expires <span class=\"keyword\">instanceof</span> <span class=\"title class_\">Date</span>) &#123;</span><br><span class=\"line\">            cookieText += <span class=\"string\">&quot;; expires=&quot;</span> + expires.<span class=\"title function_\">toGMTString</span>()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(path) &#123;</span><br><span class=\"line\">            cookieText += <span class=\"string\">&quot;;path=&quot;</span> + path</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(domain) &#123;</span><br><span class=\"line\">            cookieText += <span class=\"string\">&quot;; domain&quot;</span> + domain</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(secure) &#123;</span><br><span class=\"line\">            cookieText += <span class=\"string\">&quot;; secure&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span> = cookieText</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">// 删除已有的cookie</span></span><br><span class=\"line\">    <span class=\"attr\">unset</span>: <span class=\"keyword\">function</span>(<span class=\"params\">name, path, domain, secure</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"title function_\">set</span>(name, <span class=\"string\">&quot;&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">Date</span>(<span class=\"number\">0</span>), path, domain, secure)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2.-web-存储\">2. Web 存储<a title=\"#2.-web-存储\" href=\"#2.-web-存储\"></a></h4>\n<p>web 存储机制最初作为 HTML5 的一部分被定义成 API 的形式，但由于其本身的独特性于一些原因被剥离出来，成为一个独立的标准。其包括 localStorage 对象 和 sessionStorage 对象。</p>\n<p>其产生的主要原因：</p>\n<ol>\n<li>希望有一种再 cookie 之外存储会话数据的途径</li>\n<li>希望有一种存储大量可以跨会话存在的数据的机制</li>\n</ol>\n<blockquote>\n<p>最初的 web 存储规范中包含了 sessionStorage 和 globalStorage 两种对象的定义，在支持这两个对象的浏览器中都是以 windows 对象属性的形式存在的</p>\n</blockquote>\n<h4 id=\"3.-localstorage\">3. localStorage<a title=\"#3.-localstorage\" href=\"#3.-localstorage\"></a></h4>\n<h5 id=\"3.1-简介\">3.1 简介<a title=\"#3.1-简介\" href=\"#3.1-简介\"></a></h5>\n<p>localStorage 对象作为 <strong>持久保存客户端数据</strong>的方案 取代了 globalStorage。</p>\n<p>从功能上讲，可以通过 localStorage 在浏览器存储键值对数据，相比于 cookie，提供了更为直观的 API，在安全上相对好一点。</p>\n<p>虽然 localStorage 只能存储字符串，但也可以存储字符串化的 JSON 数据，因此相比 cookie ，localStorage 能存储更复杂的数据。</p>\n<h5 id=\"3.2-优点\">3.2 优点<a title=\"#3.2-优点\" href=\"#3.2-优点\"></a></h5>\n<ul>\n<li>提供了简单明了的 API 来进行操作</li>\n<li>更加安全</li>\n<li>可存储的数据量更大</li>\n</ul>\n<h5 id=\"3.3-语法\">3.3 语法<a title=\"#3.3-语法\" href=\"#3.3-语法\"></a></h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 使用方法存储数据</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;Srtian&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 使用属性存储数据</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"property\">say</span> = <span class=\"string\">&quot;Hello world&quot;</span></span><br><span class=\"line\"><span class=\"comment\">// 使用方法读取数据</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> name = <span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">getItem</span>(<span class=\"string\">&quot;name&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">// 使用属性读取数据</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> say = <span class=\"variable language_\">localStorage</span>.<span class=\"property\">say</span></span><br><span class=\"line\"><span class=\"comment\">// 删除数据</span></span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&quot;name&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>需要传输其他格式的数据时，我们就需要将这些数据全部转换为字符串格式，然后再进行存储</p>\n<p>获取值时将其转化回来</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> user = &#123;<span class=\"attr\">name</span>:<span class=\"string\">&quot;Srtian&quot;</span>, <span class=\"attr\">age</span>: <span class=\"number\">22</span>&#125;</span><br><span class=\"line\"><span class=\"variable language_\">localStorage</span>.<span class=\"title function_\">setItem</span>(<span class=\"string\">&quot;user&quot;</span>, <span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(user))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> age = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>(<span class=\"variable language_\">localStorage</span>.<span class=\"property\">user</span>)</span><br></pre></td></tr></table></figure>\n<h5 id=\"3.4-存储数据的有效期-与-作用域\">3.4 存储数据的有效期 与 作用域<a title=\"#3.4-存储数据的有效期-与-作用域\" href=\"#3.4-存储数据的有效期-与-作用域\"></a></h5>\n<p>通过localStorage存储的数据时永久性的，除非我们使用removeItem来删除或者用户通过设置浏览器配置来删除，负责数据会一直保留在用户的电脑上，永不过期。</p>\n<p>localStorage的作用域限定在文档源级别的（意思就是同源的才能共享），同源的文档间会共享localStorage的数据，他们可以互相读取对方的数据，甚至有时会覆盖对方的数据。当然，localStorage的作用域同样也受浏览器的限制。</p>\n<h4 id=\"4.-sessionstorage\">4. sessionStorage<a title=\"#4.-sessionstorage\" href=\"#4.-sessionstorage\"></a></h4>\n<h5 id=\"4.1-简介\">4.1 简介<a title=\"#4.1-简介\" href=\"#4.1-简介\"></a></h5>\n<p>与 localStorage 相似，不同之处在于 localStorage里面存储的数据没有过期时间设置，而Session Storage只存储当前会话页的数据，且只有当用户关闭当前会话页或浏览器时，数据才会被清除。</p>\n<h5 id=\"4.2-语法\">4.2 语法<a title=\"#4.2-语法\" href=\"#4.2-语法\"></a></h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 保存数据到sessionStorage</span></span><br><span class=\"line\">sessionStorage.<span class=\"title function_\">setItem</span>(<span class=\"string\">&#x27;name&#x27;</span>, <span class=\"string\">&#x27;Srtian&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从sessionStorage获取数据</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> data = sessionStorage.<span class=\"title function_\">getItem</span>(<span class=\"string\">&#x27;name&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从sessionStorage删除保存的数据</span></span><br><span class=\"line\">sessionStorage.<span class=\"title function_\">removeItem</span>(<span class=\"string\">&#x27;name&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 从sessionStorage删除所有保存的数据</span></span><br><span class=\"line\">sessionStorage.<span class=\"title function_\">clear</span>();</span><br></pre></td></tr></table></figure>\n<h4 id=\"5.-indexeddb\">5. indexedDB<a title=\"#5.-indexeddb\" href=\"#5.-indexeddb\"></a></h4>\n<h5 id=\"5.1-简述\">5.1 简述<a title=\"#5.1-简述\" href=\"#5.1-简述\"></a></h5>\n<p>由HTML5所提供的一种本地存储，用于在浏览器中储存较大数据结构的 Web API，并提供索引功能以实现高性能查找。它一般用于保存大量用户数据并要求数据之间有搜索需要的场景，当网络断开时，用户就可以做一些离线的操作。它较之SQL更为方便，不需要写一些特定的语法对数据进行操作，数据格式是JSON。</p>\n<h5 id=\"5.2-语法\">5.2 语法<a title=\"#5.2-语法\" href=\"#5.2-语法\"></a></h5>\n<ol>\n<li>\n<p><strong>创建数据库 并 指定数据库版本号</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注意数据库的版本号只能是整数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> request = <span class=\"title class_\">IndexedDB</span>.<span class=\"title function_\">open</span>(databasename, version)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>生成处理函数</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">request.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建数据库失败时的回调函数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">request.<span class=\"property\">onsuccess</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 创建数据库成功时的回调函数</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">request.<span class=\"property\">onupgradeneededd</span> = <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">     <span class=\"comment\">// 当数据库改变时的回调函数   唯一可以修改数据库结构的地方  可以创建和删除对象存储空间以及构建和删除索引</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>建立对象存储空间</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象存储空间仅调用createObjectStore()就可以创建。这个方法使用存储空间的名称，和一个对象参数。即便这个参数对象是可选的，它还是非常重要的，因为它可以让我们定义重要的可选属性和完善你希望创建的对象存储空间的类型。</span></span><br><span class=\"line\">request.<span class=\"property\">onupgradeneeded</span> = <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> db = event.<span class=\"property\">target</span>.<span class=\"property\">result</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> objectStore = db.<span class=\"title function_\">createObjectStore</span>(<span class=\"string\">&#x27;name&#x27;</span>, &#123; <span class=\"attr\">keyPath</span>:<span class=\"string\">&#x27;id&#x27;</span> &#125;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><strong>操作数据</strong></p>\n<ul>\n<li>\n<p>添加数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">addData</span>: <span class=\"keyword\">function</span>(<span class=\"params\">db, storename, data</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = store = db.<span class=\"title function_\">transaction</span>(storename, <span class=\"string\">&#x27;readwrite&#x27;</span>).<span class=\"title function_\">objectStore</span>(storename)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">!        <span class=\"keyword\">const</span> request = store.<span class=\"title function_\">add</span>(data[i])</span><br><span class=\"line\">        request.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;添加数据失败&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        request.<span class=\"property\">onsuccess</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;添加数据成功&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>修改数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">putData</span>: <span class=\"keyword\">function</span>(<span class=\"params\">db, storename, data</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = store = db.<span class=\"title function_\">transaction</span>(storename, <span class=\"string\">&#x27;readwrite&#x27;</span>).<span class=\"title function_\">objectStore</span>(storename)</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; data.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">!        <span class=\"keyword\">const</span> request = store.<span class=\"title function_\">put</span>(data[i])</span><br><span class=\"line\">        request.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;修改数据失败&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        request.<span class=\"property\">onsuccess</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;修改数据成功&#x27;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>获取数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">getDataByKey</span>: <span class=\"keyword\">function</span>(<span class=\"params\">db, storename, key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = store = db.<span class=\"title function_\">transaction</span>(storename, <span class=\"string\">&#x27;readwrite&#x27;</span>).<span class=\"title function_\">objectStore</span>(storename)</span><br><span class=\"line\">!    <span class=\"keyword\">const</span> request = store.<span class=\"title function_\">get</span>(key)</span><br><span class=\"line\">    request.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;获取数据失败&#x27;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    request.<span class=\"property\">onsuccess</span> = <span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> result = e.<span class=\"property\">target</span>.<span class=\"property\">result</span></span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(result)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>删除数据</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deleteDate</span>: <span class=\"keyword\">function</span>(<span class=\"params\">db, storename, key</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> store = store = db.<span class=\"title function_\">transaction</span>(storename, <span class=\"string\">&#x27;readwrite&#x27;</span>).<span class=\"title function_\">objectStore</span>(storename)</span><br><span class=\"line\">!    store.<span class=\"title function_\">delete</span>(key)</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;已删除存储空间&#x27;</span> + storename + <span class=\"string\">&#x27;中的&#x27;</span> + key + <span class=\"string\">&#x27;纪录&#x27;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>关闭数据库</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"property\">close</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n<h5 id=\"5.3-优点-与其他相比\">5.3 优点 与其他相比<a title=\"#5.3-优点-与其他相比\" href=\"#5.3-优点-与其他相比\"></a></h5>\n<ul>\n<li>拥有更大的存储空间</li>\n<li>能够处理更为复杂和结构化的数据</li>\n<li>拥有更多的交互控制</li>\n<li>每个 database 中可以拥有多个 database 和 table</li>\n</ul>\n<h5 id=\"5.4-局限性\">5.4 局限性<a title=\"#5.4-局限性\" href=\"#5.4-局限性\"></a></h5>\n<ul>\n<li><strong>存储空间限制</strong>：一个单独的数据库项目大小没有限制，但可能会限制每个 IndexedDB 数据库的大小，不同浏览器有不同限制；</li>\n<li><strong>兼容性问题</strong>：兼容性比前面提及的存储方案差</li>\n<li><strong>受同源策略限制</strong>：把存储空间绑定到了创建它的站点的源，所以不能被其他源访问</li>\n</ul>\n","prev":{"title":"Promise基本用法","link":"furtherNotes/further/03 Promise"},"next":{"title":"回调地狱及其解决方案","link":"furtherNotes/further/03 回调地狱解决"},"plink":"https://shylees.github.io/furtherNotes/further/01 浏览器存储/","toc":[{"id":"浏览器存储","title":"浏览器存储","index":"1","children":[{"id":"常见的浏览器数据存储方案","title":"常见的浏览器数据存储方案","index":"1.1"}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"2045 words in 10 min"}