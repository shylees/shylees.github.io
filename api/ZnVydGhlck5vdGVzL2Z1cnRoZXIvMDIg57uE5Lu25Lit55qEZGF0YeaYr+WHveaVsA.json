{"title":"MVC MVP MVVM","date":"2021-12-06T16:00:00.000Z","date_formatted":{"ll":"Dec 7, 2021","L":"12/07/2021","MM-DD":"12-07"},"link":"furtherNotes/further/02 组件中的data是函数","tags":["vue"],"categories":["furtherNotes"],"updated":"2021-12-06T16:00:00.000Z","content":"<blockquote>\n<p>参考链接:</p>\n<p><a href=\"https://vue3js.cn/interview/vue/data.html\">https://vue3js.cn/interview/vue/data.html</a></p>\n</blockquote>\n<h2 id=\"为什么-data-属性是一个函数而不是一个对象？\">为什么 data 属性是一个函数而不是一个对象？<a title=\"#为什么-data-属性是一个函数而不是一个对象？\" href=\"#为什么-data-属性是一个函数而不是一个对象？\"></a></h2>\n<h3 id=\"1.-实例和组件定义-data-的区别\">1. 实例和组件定义 data 的区别<a title=\"#1.-实例和组件定义-data-的区别\" href=\"#1.-实例和组件定义-data-的区别\"></a></h3>\n<ul>\n<li>\n<p>vue 实例的时候定义 data 属性可以是对象也可以是函数</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">el</span>:<span class=\"string\">&quot;#app&quot;</span>,</span><br><span class=\"line\">    <span class=\"attr\">data</span>:&#123; <span class=\"comment\">// 对象</span></span><br><span class=\"line\">        <span class=\"attr\">foo</span>:<span class=\"string\">&quot;foo&quot;</span> </span><br><span class=\"line\">    &#125;,  </span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123; <span class=\"comment\">//函数</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">foo</span>:<span class=\"string\">&quot;foo&quot;</span> &#125; </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>组件中定义 data 属性，只能是一个函数，如果直接定义为一个对象，会报警告</p>\n<p>警告说明：返回的 data 应该是一个函数在每一个组件实例中</p>\n</li>\n</ul>\n<h3 id=\"2.-组件-data-定义函数与对象的区别\">2. 组件 data 定义函数与对象的区别<a title=\"#2.-组件-data-定义函数与对象的区别\" href=\"#2.-组件-data-定义函数与对象的区别\"></a></h3>\n<p>在定义好一个组件时， vue 最终会通过 vue.extend() 构成组件实例</p>\n<p>当组件定义 data 属性时，采用对象的形式，在使用该组件创建多个组件实例的时候，当一个组件修改了data里面的值，其他组件的 data 也会被修改。</p>\n<p>but 采用函数的形式时，就不会出现这种请求，因为函数返回的对象内存地址不相同，修改一个实例 data 时，其他组件实例 data 不受影响</p>\n<h3 id=\"3.-结论\">3. 结论<a title=\"#3.-结论\" href=\"#3.-结论\"></a></h3>\n<ul>\n<li>根实例对象 data 可以是对象也可以是函数，根实例是单例，不会产生数据污染的情况</li>\n<li>组件实例对象 data 必须是函数，目的是为了防止多个组件实例对象之间共用一个 data，产生数据污染。采用函数的形式，initData 时会将其作为工厂函数都会返回全新 data 对象</li>\n</ul>\n","prev":{"title":"导航流程 和 渲染流程","link":"furtherNotes/further/01 导航和渲染流程"},"next":{"title":"vue组件通信的方式","link":"furtherNotes/further/03 vue组件通信"},"plink":"https://shylees.github.io/furtherNotes/further/02 组件中的data是函数/","toc":[{"id":"为什么-data-属性是一个函数而不是一个对象？","title":"为什么 data 属性是一个函数而不是一个对象？","index":"1","children":[{"id":"1.-实例和组件定义-data-的区别","title":"1. 实例和组件定义 data 的区别","index":"1.1"},{"id":"2.-组件-data-定义函数与对象的区别","title":"2. 组件 data 定义函数与对象的区别","index":"1.2"},{"id":"3.-结论","title":"3. 结论","index":"1.3"}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"394 words in 2 min"}