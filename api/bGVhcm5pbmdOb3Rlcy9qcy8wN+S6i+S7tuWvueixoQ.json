{"title":"js获取元素","date":"2020-05-19T16:00:00.000Z","date_formatted":{"ll":"May 20, 2020","L":"05/20/2020","MM-DD":"05-20"},"link":"learningNotes/js/07事件对象","tags":["JavaScript"],"categories":["learningNotes"],"updated":"2020-05-20T16:00:00.000Z","content":"<h3 id=\"1.-dom事件流\">1. DOM事件流<a title=\"#1.-dom事件流\" href=\"#1.-dom事件流\"></a></h3>\n<p>dom 事件流 三个阶段：</p>\n<ol>\n<li>\n<p>JS 代码中只能执行捕获或者冒泡其中的一个阶段。</p>\n</li>\n<li>\n<p>onclick 和 attachEvent（ie） 只能得到冒泡阶段。</p>\n</li>\n<li>\n<p>捕获阶段 如果addEventListener 第三个参数是 true 那么则处于捕获阶段</p>\n<blockquote>\n<p>document -&gt; html -&gt; body -&gt; father -&gt; son</p>\n</blockquote>\n</li>\n<li>\n<p>冒泡阶段 如果addEventListener 第三个参数是 false 或者 省略 那么则处于冒泡阶段</p>\n<blockquote>\n<p>son -&gt; father -&gt;body -&gt; html -&gt; document</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"2.-事件对象\">2. 事件对象<a title=\"#2.-事件对象\" href=\"#2.-事件对象\"></a></h3>\n<ol>\n<li>\n<p>event就是一个事件对象 <code>div.onclick=function(event)&#123;&#125; |div.addEventListenter('click',function(event) &#123;&#125; ) </code></p>\n</li>\n<li>\n<p>事件对象只有有了事件才会存在，是系统给我们自动创建的</p>\n</li>\n<li>\n<p>事件对象  是 事件的一系列相关数据的集合  跟事件相关的</p>\n<blockquote>\n<p>（eg：鼠标点击  包含鼠标坐标。。。  if键盘事件  包含按下哪个键）</p>\n</blockquote>\n</li>\n<li>\n<p>这个事件对象可以自己命名，比如event-&gt;e</p>\n</li>\n<li>\n<p>兼容性  ie678  <code>window.event</code></p>\n</li>\n</ol>\n<h3 id=\"3.-事件对象常见的属性和方法\">3. 事件对象常见的属性和方法<a title=\"#3.-事件对象常见的属性和方法\" href=\"#3.-事件对象常见的属性和方法\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>属性|方法</th>\n<th>行为</th>\n<th>标准</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>e.target</td>\n<td>返回   触发  事件的对象</td>\n<td>标准</td>\n</tr>\n<tr>\n<td>e.srcElement</td>\n<td>返回   触发  事件的对象</td>\n<td>非标准  ie678使用</td>\n</tr>\n<tr>\n<td>e.type</td>\n<td>返回时间的类型</td>\n<td></td>\n</tr>\n<tr>\n<td>e.cancelBubble</td>\n<td>阻止冒泡</td>\n<td>非标准  ie678使用</td>\n</tr>\n<tr>\n<td>e.stopPropagation()</td>\n<td>阻止冒泡</td>\n<td>标准</td>\n</tr>\n<tr>\n<td>e.reutrnValue</td>\n<td>阻止默认事件/行为</td>\n<td>非标准  ie678使用</td>\n</tr>\n<tr>\n<td>e.preventDefault()</td>\n<td>阻止默认事件/行为</td>\n<td>标准</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"4.-事件委托（代理/委派）（冒泡好处）：\">4. 事件委托（代理/委派）（冒泡好处）：<a title=\"#4.-事件委托（代理/委派）（冒泡好处）：\" href=\"#4.-事件委托（代理/委派）（冒泡好处）：\"></a></h3>\n<p>原理：不给每个节点单独是设置事件监听器，而是将事件监听器设置再其父结点上，然后利用冒泡原理影响设置每个子节点<br>\n作用：只操作了一次DOM，提高了程序的性能</p>\n<p>事件委托的核心原理：给父节点添加侦听器， 利用事件冒泡影响每一个子节点</p>\n<blockquote>\n<p>比如：给ul注册事件，然后利用事件对象的target来找到当前点击的li，以为点击li，事件会冒泡到ul上，ul有注册事件，就会触发监听器</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">li</span>&gt;</span>xxx<span class=\"tag\">&lt;/<span class=\"name\">li</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ul</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"keyword\">var</span> ul=<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;ul&#x27;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">ul.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;click&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">\t<span class=\"comment\">// e.target 这个可以得到我们点击的对象   点哪个哪个背景变色</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">\te.<span class=\"property\">target</span>.<span class=\"property\">style</span>.<span class=\"property\">backgroundColor</span>=<span class=\"string\">&#x27;pink&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">&#125;)</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"5.-常用的鼠标事件\">5. 常用的鼠标事件<a title=\"#5.-常用的鼠标事件\" href=\"#5.-常用的鼠标事件\"></a></h3>\n<h4 id=\"5.1-禁用默认选项（了解）\">5.1 禁用默认选项（了解）<a title=\"#5.1-禁用默认选项（了解）\" href=\"#5.1-禁用默认选项（了解）\"></a></h4>\n<ol>\n<li>\n<p>禁止鼠标右键菜单：<code>contextmenu</code>主要控制应该何时显示上下菜单，主要用于程序员取消默认的上下文菜单</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;contextmenu&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">\te.<span class=\"title function_\">prevetDefault</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>禁止选中文字：<code>selectstart</code> 开始选中</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;selectstart&#x27;</span>,<span class=\"keyword\">function</span>(<span class=\"params\">e</span>)&#123;</span><br><span class=\"line\">\te.<span class=\"title function_\">prevetDefault</span>();</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h4 id=\"5.2-鼠标事件对象\">5.2 鼠标事件对象<a title=\"#5.2-鼠标事件对象\" href=\"#5.2-鼠标事件对象\"></a></h4>\n<p>event对象代表时间的状态，跟事件相关的一系列信息的集合。现阶段主要是鼠标事件MouseEvent 何键盘事件KEyboardEvent</p>\n<ul>\n<li>e.clientX      返回鼠标相对于浏览器窗口可视区的X坐标</li>\n<li>e.clientY      返回鼠标相对于浏览器窗口可视区的Y坐标</li>\n<li>e.pageX      返回鼠标相对于文档页面的X坐标      IE9+支持</li>\n<li>e.pageY      返回鼠标相对于文档页面的Y坐标      IE9+支持</li>\n<li>e.screenX    返回鼠标相对于电脑屏幕的X坐标</li>\n<li>e.screenY    返回鼠标相对于电脑屏幕的Y坐标</li>\n</ul>\n<h3 id=\"6.常用的键盘事件\">6.常用的键盘事件<a title=\"#6.常用的键盘事件\" href=\"#6.常用的键盘事件\"></a></h3>\n<h4 id=\"6.1键盘事件对象\">6.1键盘事件对象<a title=\"#6.1键盘事件对象\" href=\"#6.1键盘事件对象\"></a></h4>\n<ul>\n<li>\n<p>onkeyup      某个键盘按键时被松开时触发</p>\n</li>\n<li>\n<p>onkeydown 某个键盘按键被按下时触发</p>\n</li>\n<li>\n<p>onkeypress  某个键盘按键被按下时  触发   但不识别功能键（ctrl   shift）</p>\n<p>三个事件的顺序：keydowm–keypress–keyup</p>\n</li>\n</ul>\n<blockquote>\n<p>注：keydown和keypress在文本框里的特点：他们两个事件触发时，文字还没有落入文本框中<br>\nkeyup事件触发时，文字就已经落入文本框里了</p>\n</blockquote>\n<h4 id=\"8.2键盘事件对象\">8.2键盘事件对象<a title=\"#8.2键盘事件对象\" href=\"#8.2键盘事件对象\"></a></h4>\n<ul>\n<li>keyCode   返回该键的ASCLL值</li>\n<li>key           返回按下的值</li>\n</ul>\n<blockquote>\n<p>onkeydown  和 onkeyup不区分字母大小写，onkeypress区分字母大小写<br>\n在实际开发中，我们更多的使用keydown和keyup 它能识别所有的键（包括包括功能键）\t<br>\nkeypress不识别功能键，但是keyCode属性区分大小写，返回不同的ASCLL值</p>\n</blockquote>\n","prev":{"title":"js事件","link":"learningNotes/js/06注册删除事件"},"next":{"title":"js节点操作","link":"learningNotes/js/04节点操作"},"plink":"https://shylees.github.io/learningNotes/js/07事件对象/","toc":[{"id":"1.-dom事件流","title":"1. DOM事件流","index":"1"},{"id":"2.-事件对象","title":"2. 事件对象","index":"2"},{"id":"3.-事件对象常见的属性和方法","title":"3. 事件对象常见的属性和方法","index":"3"},{"id":"4.-事件委托（代理/委派）（冒泡好处）：","title":"4. 事件委托（代理&#x2F;委派）（冒泡好处）：","index":"4"},{"id":"5.-常用的鼠标事件","title":"5. 常用的鼠标事件","index":"5"},{"id":"6.常用的键盘事件","title":"6.常用的键盘事件","index":"6"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"1056 words in 5 min"}