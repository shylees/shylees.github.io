{"title":"HTTP 与 TCP keep-alive 的区别","date":"2022-03-26T16:00:00.000Z","date_formatted":{"ll":"Mar 27, 2022","L":"03/27/2022","MM-DD":"03-27"},"link":"furtherNotes/further/01 http tcp keepalive","tags":["HTTP","TCP","计网"],"categories":["furtherNotes"],"updated":"2022-03-26T16:00:00.000Z","content":"<blockquote>\n<p>根据 连接轮询扩展</p>\n<p>参考链接:</p>\n<p><a href=\"https://www.jianshu.com/p/95af6727bf6c\">https://www.jianshu.com/p/95af6727bf6c</a></p>\n<p><a href=\"https://www.jianshu.com/p/cb36364ee099\">https://www.jianshu.com/p/cb36364ee099</a>   – 详细</p>\n</blockquote>\n<h2 id=\"http-keep-alive\">HTTP keep-alive<a title=\"#http-keep-alive\" href=\"#http-keep-alive\"></a></h2>\n<blockquote>\n<p>决定tcp连接是长连接还是短连接</p>\n</blockquote>\n<ul>\n<li>HTTP是基于TCP传输协议实现的，<strong>客户端与服务段要进行HTTP连接前，需要先建立TCP连接</strong>，然后客户端发送HTTP请求，服务端收到后就返回响应，至此[请求-应答]完成，随后释放连接。</li>\n</ul>\n<ul>\n<li>\n<p>HTTP短连接：每次请求都经历一个建立TCP的连接。一次连接只能请求一次资源。</p>\n</li>\n<li>\n<p>HTTP长连接：HTTP的keepalive实现了这个功能，可以使用同一个TCP连接来发送和接受多个HTTP请求/应答，避免连接建立释放的过程造成的资源消耗</p>\n</li>\n</ul>\n<ul>\n<li>特点：只要任意一端没有明确提出断开连接，则保持TCP连接。</li>\n<li>为了避免资源浪费的情况，web服务器会提供超时连接的参数，用来指定HTTP长连接的超时时间。</li>\n</ul>\n<h2 id=\"tcp-keep-alive\">TCP keep-alive<a title=\"#tcp-keep-alive\" href=\"#tcp-keep-alive\"></a></h2>\n<ul>\n<li>\n<p>是由TCP内核层实现的，称为<strong>TCP的保活机制</strong></p>\n</li>\n<li>\n<p>定义在一个时间段，在这个时间段内，如果<strong>没有任何连接</strong>的相关活动，<strong>TCP保活机制会开始作用</strong> —— 每隔一个时间段，发送一个探测报文，该探测报文包含的数据非常少，<strong>如果连续几个探测报文都没有得到响应，则认为当前的TCP连接已经死亡</strong>，系统内核将错误信息通知上层应用程序。</p>\n</li>\n<li>\n<p>如果对端程序是正常工作的。当TCP保活的探测报文发送给对端，对端会正常响应，这样TCP保活时间会被重置，等待下一个TCP保活时间的到来。</p>\n</li>\n<li>\n<p>如果对端程序崩溃，或对端由于其他原因导致报文不可达。当TCP保活的探测报文发送给对端后，石沉大海，没有响应，连续几次，达到保活探测次数后，TCP会报告该TCP连接已死亡。</p>\n</li>\n</ul>\n","prev":{"title":"nuxtjs 开发 spa 遇上的有关 html 标签规则的报错","link":"workNotes/work/10 nuxtjs报错"},"next":{"title":"长连接短链接 长轮询短轮询","link":"furtherNotes/further/01 tcp长短连接轮询"},"plink":"https://shylees.github.io/furtherNotes/further/01 http tcp keepalive/","toc":[{"id":"http-keep-alive","title":"HTTP keep-alive","index":"1"},{"id":"tcp-keep-alive","title":"TCP keep-alive","index":"2"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"521 words in 3 min"}