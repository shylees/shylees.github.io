{"title":"tcp三次握手、四次挥手","date":"2022-03-26T16:00:00.000Z","date_formatted":{"ll":"Mar 27, 2022","L":"03/27/2022","MM-DD":"03-27"},"link":"furtherNotes/further/02 tcp三次握手四次挥手","tags":["网络"],"categories":["furtherNotes"],"updated":"2022-03-26T16:00:00.000Z","content":"<blockquote>\n<p>参考链接：</p>\n<p><a href=\"https://juejin.cn/post/6844904070889603085#heading-1\">https://juejin.cn/post/6844904070889603085#heading-1</a></p>\n<p><a href=\"https://juejin.cn/post/6844903625513238541\">https://juejin.cn/post/6844903625513238541</a></p>\n</blockquote>\n<h2 id=\"三次握手\">三次握手<a title=\"#三次握手\" href=\"#三次握手\"></a></h2>\n<h4 id=\"为什么要进行三次握手：为了确认对方的发送和接收能力。\">为什么要进行三次握手：为了确认对方的发送和接收能力。<a title=\"#为什么要进行三次握手：为了确认对方的发送和接收能力。\" href=\"#为什么要进行三次握手：为了确认对方的发送和接收能力。\"></a></h4>\n<h4 id=\"主要流程：\">主要流程：<a title=\"#主要流程：\" href=\"#主要流程：\"></a></h4>\n<img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/6/26/1643a1dd6df4813b~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp\" style=\"zoom: 40%;float:flet;\" >  \n<h4 id=\"为什么不是两次？\">为什么不是两次？<a title=\"#为什么不是两次？\" href=\"#为什么不是两次？\"></a></h4>\n<p>根本原因: 无法确认客户端的接收能力。</p>\n<p>如果是两次，你现在发了 SYN 报文想握手，但是这个包<strong>滞留</strong>在了当前的网络中迟迟没有到达，TCP 以为这是丢了包，于是重传，两次握手建立好了连接。</p>\n<p>看似没有问题，但是连接关闭后，如果这个<strong>滞留</strong>在网路中的包到达了服务端呢？这时候由于是两次握手，服务端只要接收到然后发送相应的数据包，就默认<strong>建立连接</strong>，但是现在客户端已经断开了。</p>\n<h4 id=\"为什么不是四次？\">为什么不是四次？<a title=\"#为什么不是四次？\" href=\"#为什么不是四次？\"></a></h4>\n<p>三次握手的目的是确认双方<code>发送</code>和<code>接收</code>的能力，那四次握手可以嘛？</p>\n<p>当然可以，100 次都可以。但为了解决问题，三次就足够了，再多用处就不大了。</p>\n<h4 id=\"三次握手过程中可以携带数据么？\">三次握手过程中可以携带数据么？<a title=\"#三次握手过程中可以携带数据么？\" href=\"#三次握手过程中可以携带数据么？\"></a></h4>\n<p>第三次握手的时候，可以携带。前两次握手不能携带数据。</p>\n<p>如果前两次握手能够携带数据，<strong>那么一旦有人想攻击服务器，那么他只需要在第一次握手中的 SYN 报文中放大量数据，那么服务器势必会消耗更多的时间和内存空间去处理这些数据</strong>，增大了服务器被攻击的风险。</p>\n<p>第三次握手的时候，客户端已经处于<code>ESTABLISHED</code>状态，并且已经能够确认服务器的接收、发送能力正常，这个时候相对安全了，可以携带数据。</p>\n<h4 id=\"同时打开会怎样？\">同时打开会怎样？<a title=\"#同时打开会怎样？\" href=\"#同时打开会怎样？\"></a></h4>\n<p>如果双方同时发 <code>SYN</code>报文，状态变化会是怎样的呢？</p>\n<p>在发送方给接收方发<code>SYN</code>报文的同时，接收方也给发送方发<code>SYN</code>报文，两个人刚上了!</p>\n<p>发完<code>SYN</code>，两者的状态都变为<code>SYN-SENT</code>。</p>\n<p>在各自收到对方的<code>SYN</code>后，两者状态都变为<code>SYN-REVD</code>。</p>\n<p>接着会回复对应的<code>ACK + SYN</code>，这个报文在对方接收之后，两者状态一起变为<code>ESTABLISHED</code>。</p>\n<p>这就是同时打开情况下的状态变迁。</p>\n<h2 id=\"四次挥手\">四次挥手<a title=\"#四次挥手\" href=\"#四次挥手\"></a></h2>\n<img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2018/6/26/1643a20296de1ff0~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp\" style=\"zoom:40%;\" >\t\n<h4 id=\"等待2msl的意义\">等待2MSL的意义<a title=\"#等待2msl的意义\" href=\"#等待2msl的意义\"></a></h4>\n<p>如果不等待，客户端直接跑路，当<strong>服务端还有很多数据包要给客户端发</strong>，且还在路上的时候，若客户端的端口此时刚好被新的应用占用，那么就接收到了无用数据包，造成数据包混乱。所以，<strong>最保险的做法是等服务器发来的数据包都死翘翘再启动新的应用。</strong></p>\n<ul>\n<li>1 个 MSL 确保四次挥手中<strong>主动关闭方最后的 ACK 报文最终能达到对端</strong></li>\n<li>1 个 MSL 确保<strong>对端没有收到 ACK 重传的 FIN 报文可以到达</strong></li>\n</ul>\n<p>这就是等待 2MSL 的意义。</p>\n<h4 id=\"为什么是四次挥手而不是三次？\">为什么是四次挥手而不是三次？<a title=\"#为什么是四次挥手而不是三次？\" href=\"#为什么是四次挥手而不是三次？\"></a></h4>\n<p>因为服务端在接收到<code>FIN</code>, 往往不会立即返回<code>FIN</code>, <strong>必须等到服务端所有的报文都发送完毕了，才能发<code>FIN</code></strong>。因此先发一个<code>ACK</code>表示已经收到客户端的<code>FIN</code>，延迟一段时间才发<code>FIN</code>。这就造成了四次挥手。</p>\n<p>如果是三次挥手会有什么问题？</p>\n<p>等于<strong>说服务端将<code>ACK</code>和<code>FIN</code>的发送合并为一次挥手</strong>，这个时候<strong>长时间的延迟</strong>可能会导致客户端误以为<code>FIN</code>没有到达客户端，从而让客户端不断的重发<code>FIN</code></p>\n<h4 id=\"同时关闭会怎样？\">同时关闭会怎样？<a title=\"#同时关闭会怎样？\" href=\"#同时关闭会怎样？\"></a></h4>\n<img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/2/23/170723edeb9e8003~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp\" style=\"zoom:67%;\" >","prev":{"title":"http 与 tcp keep-alive 的区别","link":"furtherNotes/further/01 http tcp keepalive"},"next":{"title":"nuxtjs 的生命周期","link":"workNotes/work/nuxtjs 生命周期"},"plink":"https://shylees.github.io/furtherNotes/further/02 tcp三次握手四次挥手/","toc":[{"id":"三次握手","title":"三次握手","index":"1"},{"id":"四次挥手","title":"四次挥手","index":"2"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"1013 words in 5 min"}