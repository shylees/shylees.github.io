{"title":"红宝书 - 第1章 什么是JavaScript","date":"2021-01-23T16:00:00.000Z","date_formatted":{"ll":"Jan 24, 2021","L":"01/24/2021","MM-DD":"01-24"},"link":"readNotes/1","tags":["JavaScript"],"categories":["readNotes"],"updated":"2021-01-24T16:00:00.000Z","content":"<h2 id=\"1.1-简短的历史回顾\">1.1 简短的历史回顾<a title=\"#1.1-简短的历史回顾\" href=\"#1.1-简短的历史回顾\"></a></h2>\n<ul>\n<li>\n<p><font color='blue'>初想法——</font>1995年，网景公司的Brendan Eich的工程师，开始为即将发布的Netscape Navigator2开发一个叫<code>Mocha</code>(后来改名为<code>LiveScript</code>)的脚本语言，当时计划在客户端和服务器端都使用它，在服务端叫<code>LiveWire</code>.</p>\n</li>\n<li>\n<p><font color='blue'>发布1.0——</font>为赶上发布时间，网景与Sun结为开发联盟，共同完成<code>LiveScript</code>的开发，在Netscape Navigator2正式发布前，网景把<code>LiveScript</code> 改名为<code>JavaScript</code>(搭上媒体当时炒作Java的顺风车)</p>\n</li>\n<li>\n<p><font color='blue'>发布1.1、竞争——</font><code>JavaScript1.0</code>很成功，网景又在Netscape Navigator3发布了1.1版本，不久后微软发布了IE3，其中包含自己名为<code>JScript</code>的<code>JavaScript</code>实现</p>\n<blockquote>\n<p>意味着出现了两个版本的<code>JavaScript</code>：Netscape Navigator中的<code>JavaScript</code>、IE中的<code>JScript</code></p>\n</blockquote>\n</li>\n<li>\n<p><font color='blue'>打造标准-&gt;es——</font>1997年，<code>JavaScript</code>作为提案被提交给欧洲计算机制造商协会(Ecma)。第39技术委员会(TC39)承担了“标准化一门通用、跨平台、厂商中立的脚本语言的语法和语义”的任务(参见<code>TC39-ECMAScript</code>)。</p>\n<blockquote>\n<p>TC39委员会由来自网景、Sun、微软、Borland、Nombas和其他对这门脚本语言有兴趣的公司的工程师组成。</p>\n</blockquote>\n<p>他们花了数月打造出ECMA-262，也就是<font color='red'><code>ECMAScript</code></font>这个新的脚本语言标准。</p>\n</li>\n<li>\n<p><font color='blue'>使用es标准——</font>1998年，国际标准化组织（ISO）和国际电工委员会（IEC）也将<code>ECMScript</code>采纳为标准（ISO/IEC-16262），自此以后，各家浏览器均以<code>ECMAScript</code>作为自己<code>JavaScript</code>实现的依据，虽然具体实现各有不同。</p>\n</li>\n</ul>\n<h2 id=\"1.2-javascript实现\">1.2 JavaScript实现<a title=\"#1.2-javascript实现\" href=\"#1.2-javascript实现\"></a></h2>\n<blockquote>\n<p>虽然<code>JavaScript</code>和<code>ECMAScript</code>基本上是同义词，但<code>JavaScript</code>远远不限于<code>ECMA-262</code>所定义的那样</p>\n</blockquote>\n<p>完整的<code>JavaScript</code>实现包括：</p>\n<ol>\n<li><font color='red'>核心（ECMAScript）</font></li>\n<li><font color='red'>文档对象模型（DOM）</font></li>\n<li><font color='red'>浏览器对象模型（BOM）</font></li>\n</ol>\n<h3 id=\"1.2.1-ecmascript\">1.2.1 ECMAScript<a title=\"#1.2.1-ecmascript\" href=\"#1.2.1-ecmascript\"></a></h3>\n<p><strong>定义：</strong><code>ECMAScript</code>，即<code>ECMA-262</code>定义的语言，并不局限Web浏览器。</p>\n<blockquote>\n<ul>\n<li>\n<p>这门语言没有输入输出之类的方法。</p>\n</li>\n<li>\n<p><code>ECMA-262</code>将这门语言作为一个基准来定义，以便在它之上再构建更稳健的脚本语言。</p>\n</li>\n<li>\n<p>Web浏览器只是<code>ECMAScript</code>实现可能存在的一种<strong>宿主环境</strong></p>\n</li>\n<li>\n<p>宿主环境提供<code>ECMAScript</code>的基准实现和与环境自身交互必需的扩展</p>\n</li>\n<li>\n<p>扩展（比如DOM）使用<code>ECMAScript</code>核心类型和语法，提供特定的于环境的额外功能。</p>\n</li>\n<li>\n<p>其他宿主环境还有服务器端JavaScript平台Node.js和即将被淘汰的Adobe Flash</p>\n</li>\n</ul>\n</blockquote>\n<p>不涉及浏览器的话，ECMA-262的定义:(在基本的层面，它描述这门语言的部分：)</p>\n<ul>\n<li>语法</li>\n<li>类型</li>\n<li>语句</li>\n<li>关键字</li>\n<li>保留字</li>\n<li>操作符</li>\n<li>全局对象</li>\n</ul>\n<p><code>ECMAScript</code>只是对实现这个规范描述的所有方面的一门语言的称呼。</p>\n<h4 id=\"1.ecmascript版本\">1.ECMAScript版本<a title=\"#1.ecmascript版本\" href=\"#1.ecmascript版本\"></a></h4>\n<p>ECMAScript不同的版本以‘edition’表示（也就是描述特定实现的ECMA-262的版本），最近的版本是第10版，发布于2019年06月。</p>\n<ol>\n<li>\n<p>ECMA-262第1版：本质上与网景的JavaScript1.1相同，只不过删除了所有浏览器特定的代码，外加少量细微的修改</p>\n<blockquote>\n<p>ECMA-262要求支持Unicode标准，以支持多语言，而且对象要与平台无关。但Netscape JavaScript1.1的对象不是这样的，比如Date对象就依赖平台。这也是JavaScript1.1和JavaScript1.2不符合ECMA-262第1版的原因</p>\n</blockquote>\n</li>\n<li>\n<p>ECMA-262第2版：做了一些编校工作，主要是为了更新之后严格符合ISO/IEC-16262的要求，并没有增减或改变任何特性</p>\n<blockquote>\n<p>ECMAScript实现通常不使用第2版来衡量符合性</p>\n</blockquote>\n</li>\n<li>\n<p>ECMA-262第3版：第一次真正对这个标准进行更新，更新了字符串处理、错误定义和数值输出，还增加了对正则表达式、新的控制语句、try/catch异常处理的支持，以及为了更好地让国际化所做的少量修改</p>\n</li>\n<li>\n<p>ECMA-262第4版：是对这门语言的一次彻底修订。Ecma39再次被召集起来，几乎在第3版的基础上完全定义了一门新语言。包括强类型变量、新语句、数据结构、真正的类、经典的继承、操作数据的新手段。因为跳跃太大，所以在正式发布前就被放弃了</p>\n</li>\n<li>\n<p>ECMA-262第5版：Ecma39在研究第4版的同时也提出了‘ECMAScript3.1’，只对这门语言进行较少的改进，只要在现有JavaScript引擎基础上做一些增改就可以实现，最终ES3.1变成了ECMA-262的第5版，其致力于厘清第3版存在的歧义，也增加了新功能。包括<strong>原生的解析</strong>和<strong>序列化JOSN数据的json对象</strong>、<strong>方便继承和高级属性定义的方法</strong>、<strong>新的增强ECMAScript引擎解释</strong>和<strong>执行代码能力的严格模式</strong></p>\n</li>\n<li>\n<p>ECMA-262第6版：ES6、ES2015、ES Harmony（和谐版），于2015年6月发布。这一版包含了大概这个规范有史以来最重要的一批增强特性。ES6正式支持了<strong>类</strong>、<strong>模块</strong>、<strong>迭代器</strong>、<strong>生成器</strong>、<strong>箭头函数</strong>、<strong>期约</strong>、<strong>反射</strong>、<strong>代理</strong>和<strong>众多新的数据类型</strong>。</p>\n</li>\n<li>\n<p>ECMA-262第7版：ES7、ES2016，于2016年6月发布，这次修订只包含少量语法层面的增强，如<strong>Array.proptotype.includes</strong>和**指数操作符****.</p>\n</li>\n<li>\n<p>ECMA-262第8版：ES8、ES2017，完成于2017年6月，这一版主要增加了<strong>异步函数</strong>(async/await)、<strong>SharedArrayBuffer</strong>及<strong>Atomics API</strong>，以及Objec<strong>t.values() / Object.entries() / Object.getOwnPropertyDescriptors()</strong> 和<strong>字符串填充方法</strong>，另外明确<strong>支持对象字面量最后的逗号</strong>。</p>\n</li>\n<li>\n<p>ECMA-262第9版：ES9、ES2018，发布于2018年6月，这次修订包括<strong>异步迭代</strong>、<strong>剩余和扩展属性</strong>、<strong>一组新的正则表达式特性</strong>、<strong>Promise finally()</strong>，以及<strong>模板字面量修改</strong>。</p>\n</li>\n<li>\n<p>ECMA-262第10版：ES10、ES2019，发布于2019年6月，这次修订增加了<strong>Array.prototype.flat() / flatMap()</strong> 、 <strong>String.prototype.trimStart() / trimEnd()</strong> <strong>、Object.fromEntries() 方法</strong>，以及<strong>Symbol.prototype.description属性</strong>，<strong>明确定义了Function.prototype.toString() 的返回值值并固定了Array.prototype.sort() 的顺序</strong>。解决了<strong>JSON字符串兼容的问题</strong>，并<strong>定义了catch子句的可选绑定</strong>。</p>\n</li>\n</ol>\n<h4 id=\"2.ecmascript符合性是什么意思\">2.ECMAScript符合性是什么意思<a title=\"#2.ecmascript符合性是什么意思\" href=\"#2.ecmascript符合性是什么意思\"></a></h4>\n<p>ECMA-262阐述了什么是ECMAScript符合性，要成为ECMAScript实现，必须满足：</p>\n<ol>\n<li>支持ECMA-262中描述的所有“类型、值、对象、属性、函数，以及程序语法与语义”；</li>\n<li>支持Unicode字符标准</li>\n</ol>\n<p>此外，符合性实现还可以满足下列要求：</p>\n<ol>\n<li>增加ECMA-262中未提及的“额外的类型、值、对象、属性和函数”。ECMA-262所说的这些额外内容主要指规范中未给出的新对象或对象的新属性</li>\n<li>支持ECMA-262中，没有定义的“程序和正则表达式语法”(允许修改和扩展内置的正则表达式特性)</li>\n</ol>\n<h4 id=\"3.-浏览器对ecmascript的支持\">3. 浏览器对ECMAScript的支持<a title=\"#3.-浏览器对ecmascript的支持\" href=\"#3.-浏览器对ecmascript的支持\"></a></h4>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>浏览器</th>\n<th>ECMAScript符合性</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Netscape Navigator2</td>\n<td>—</td>\n</tr>\n<tr>\n<td>Netscape Navigator3</td>\n<td>—</td>\n</tr>\n<tr>\n<td>Netscape Navigator4~4.05</td>\n<td>—</td>\n</tr>\n<tr>\n<td>Netscape Navigator4.06~4.79</td>\n<td>第1版</td>\n</tr>\n<tr>\n<td>Netscape 6+（Mozilla 0.6.0+）</td>\n<td>第3版</td>\n</tr>\n<tr>\n<td>IE3~4</td>\n<td>—</td>\n</tr>\n<tr>\n<td>IE5</td>\n<td>第1版</td>\n</tr>\n<tr>\n<td>IE5.5~8</td>\n<td>第3版</td>\n</tr>\n<tr>\n<td>IE9</td>\n<td>第5版（部分）</td>\n</tr>\n<tr>\n<td>IE10~11</td>\n<td>第5版</td>\n</tr>\n<tr>\n<td>Edge12+</td>\n<td>第6版</td>\n</tr>\n<tr>\n<td>Opera6~7.1</td>\n<td>2</td>\n</tr>\n<tr>\n<td>Opera7.2+</td>\n<td>3</td>\n</tr>\n<tr>\n<td>Opera15~28</td>\n<td>5</td>\n</tr>\n<tr>\n<td>Opera29~35</td>\n<td>6（部分）</td>\n</tr>\n<tr>\n<td>Opera36+</td>\n<td>6</td>\n</tr>\n<tr>\n<td>Safari1~2.0.x</td>\n<td>第3版（部分）</td>\n</tr>\n<tr>\n<td>Safari3.1~5.1</td>\n<td>第5版（部分）</td>\n</tr>\n<tr>\n<td>Safari6~8</td>\n<td>第5版</td>\n</tr>\n<tr>\n<td>Safari9+</td>\n<td>第6版</td>\n</tr>\n<tr>\n<td>iOS Safari3.2~5.1</td>\n<td>5（部分）</td>\n</tr>\n<tr>\n<td>iOS Safari6~8.4</td>\n<td>5</td>\n</tr>\n<tr>\n<td>iOS Safari9.2+</td>\n<td>6</td>\n</tr>\n<tr>\n<td>Chrome1~3</td>\n<td>第3版</td>\n</tr>\n<tr>\n<td>Chrome4~22</td>\n<td>第5版（部分）</td>\n</tr>\n<tr>\n<td>Chrome23+</td>\n<td>第5版</td>\n</tr>\n<tr>\n<td>Chrome42~48</td>\n<td>第6版（部分）</td>\n</tr>\n<tr>\n<td>Chrome79+</td>\n<td>第6版</td>\n</tr>\n<tr>\n<td>Firefox1~2</td>\n<td>3</td>\n</tr>\n<tr>\n<td>Firefox3.0.x~20</td>\n<td>5（部分）</td>\n</tr>\n<tr>\n<td>Firefox21~44</td>\n<td>5</td>\n</tr>\n<tr>\n<td>Firefox45+</td>\n<td>6</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"1.2.2-dom\">1.2.2 DOM<a title=\"#1.2.2-dom\" href=\"#1.2.2-dom\"></a></h3>\n<p><strong>文档对象模型</strong>（DOM，Document Object Model）是一个应用程序接口（API），用于在HTML中使用扩展的XML。DOM将整个页面抽象为一组分层节点。HTML或XML页面的每个组成部分都是一种节点，包含不同的数据。</p>\n<blockquote>\n<p>DOM通过创建表示文档的树，让开发者可以随心所欲地控制网页的内容和结构。使用DOM API，可以轻松的删除、添加、替换、修改节点。</p>\n</blockquote>\n<h4 id=\"1.为什么dom是必需的\">1.为什么DOM是必需的<a title=\"#1.为什么dom是必需的\" href=\"#1.为什么dom是必需的\"></a></h4>\n<p>在IE4和Netscape Navigator4支持不同形式的动态HTML（DHTML）的情况下，开发者首先可以做到不刷新页面而修改页面外观和内容。为了保持Web跨平台性，万维网联盟（W3C，World Wide Web Consortium）开始制定DOM标准的进程。</p>\n<h4 id=\"2.dom级别\">2.DOM级别<a title=\"#2.dom级别\" href=\"#2.dom级别\"></a></h4>\n<ol>\n<li>1998年10月，<strong>DOM Level 1</strong> 成为W3C的推荐标准。由以下两个模块组成：</li>\n</ol>\n<ul>\n<li>DOM Core  ： 映射XML文档，从而方便访问和操作文档任意部分的方式</li>\n<li>DOM HTML  ：扩展了Core，并增加了特定于HTML的对象和方法</li>\n</ul>\n<ol start=\"2\">\n<li>DOM Level 1 的目标是映射文档结构，而<strong>DOM Level 2</strong>的目标则宽泛得多。对最初DOM的扩展增加了<u>对（DHTML早就支持的）鼠标和用户界面事件、范围、遍历的支持</u>，而且<u>通过对象接口支持了层叠样式表CSS</u>。DOM Level 1 中的DOM Core也<u>被扩展以包含对XML命名空间的支持</u>。</li>\n</ol>\n<p>​       DOM Level 2新增了以下模块，以支持新的接口</p>\n<ul>\n<li>DOM视图：描述追踪文档不同视图（如应用CSS样式前后的文档）的接口</li>\n<li>DOM事件：描述事件及事件处理接口</li>\n<li>DOM样式：描述处理元素CSS样式的接口</li>\n<li>DOM遍历和范围：描述遍历和操作DOM树的接口</li>\n</ul>\n<ol start=\"3\">\n<li><strong>DOM Level 3</strong>进一步扩展了DOM，增加了以统一的方式加载和保存文档的方法（包含在一个叫DOM Load and Save的新模块中），还有验证文档的方法（DOM Validation）。在Level3中，DOM Core经过扩展支持了所有XML1.0的特性，包括XML Infoset、XPath 和 XML Base</li>\n<li>目前，W3C不再按照Level来维护DOM了，而是作为DOM Living Standard来维护，其快照称为DOM4，DOM4新增的内容包括替代Mutation Events的Mutation Observers</li>\n</ol>\n<h4 id=\"3.其他dom\">3.其他DOM<a title=\"#3.其他dom\" href=\"#3.其他dom\"></a></h4>\n<blockquote>\n<p>除了DOM Core和DOM HTML接口，有些其他语言也发布了自己的DOM标准。</p>\n</blockquote>\n<p>以下语言均基于XML，每一种都增加了该语言独有的DOM方法和接口：</p>\n<p>W3C推荐标准：</p>\n<ul>\n<li>可伸缩矢量图（SVG，Scalable Vector Graphics）</li>\n<li>数学标记语言（MathML，Mathematical Markup Language）</li>\n<li>同步多媒体集成语言（SMIL，Synchronization Multimedia Integration Language）</li>\n</ul>\n<p>非W3C推荐的标准：</p>\n<ul>\n<li>Mozilla的XML用户界面语言（XUL，XML　User　Interface　Language）</li>\n</ul>\n<h4 id=\"４.web浏览器对dom的支持情况\">４.Web浏览器对DOM的支持情况<a title=\"#４.web浏览器对dom的支持情况\" href=\"#４.web浏览器对dom的支持情况\"></a></h4>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>浏览器</th>\n<th>DOM兼容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Netscape Navigator１～４.ｘ</td>\n<td>—</td>\n</tr>\n<tr>\n<td>Netscape 6+（Mozilla 0.6.0+）</td>\n<td>Level１、Level２（几乎全部）、Level３（部分）</td>\n</tr>\n<tr>\n<td>IE２～4.ｘ</td>\n<td>—</td>\n</tr>\n<tr>\n<td>IE5</td>\n<td>Level１（很少）</td>\n</tr>\n<tr>\n<td>IE5.5~8</td>\n<td>Level１（几乎全部）</td>\n</tr>\n<tr>\n<td>IE９＋</td>\n<td>Level１、Level２、Level３</td>\n</tr>\n<tr>\n<td>Edge</td>\n<td>Level１、Level２、Level３</td>\n</tr>\n<tr>\n<td>Opera１～６</td>\n<td>—</td>\n</tr>\n<tr>\n<td>Opera7～８.ｘ</td>\n<td>Level１（几乎全部）、Level２（部分）</td>\n</tr>\n<tr>\n<td>Opera９～９.９</td>\n<td>Level１、Level２（几乎全部）、Level３（部分）</td>\n</tr>\n<tr>\n<td>Opera１０＋</td>\n<td>Level１、Level２、Level３（部分）</td>\n</tr>\n<tr>\n<td>Safari１.０.ｘ</td>\n<td>Level１</td>\n</tr>\n<tr>\n<td>Safari２＋</td>\n<td>Level１、Level２（全部）、Level３（部分）</td>\n</tr>\n<tr>\n<td>iOS Safari3.２＋</td>\n<td>Level１、Level２（全部）、Level３（部分）</td>\n</tr>\n<tr>\n<td>Chrome1＋</td>\n<td>Level１、Level２（全部）、Level３（部分）</td>\n</tr>\n<tr>\n<td>Firefox1＋</td>\n<td>Level１、Level２（几乎全部）、Level３（部分）</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"1.2.3-bom\">1.2.3 BOM<a title=\"#1.2.3-bom\" href=\"#1.2.3-bom\"></a></h3>\n<p><strong>浏览器对象模型</strong>（BOM）API，用于支持访问和操作浏览器的窗口。</p>\n<blockquote>\n<p>它是唯一一个没有相关标准的JavaScript实现。后来html5以正式规范的形式涵盖了尽可能多的DOM特性</p>\n</blockquote>\n<p>BOM主要针对浏览器窗口和子窗口（frame），通常人们会把任何特定于浏览器的扩展都归在BOM的范畴内，下面就是这样一些扩展：</p>\n<ul>\n<li>弹出新浏览器窗口的能力</li>\n<li>移动、缩放和关闭浏览器窗口的能力</li>\n<li>navigator对象，提供关于浏览器的详尽信息</li>\n<li>location对象，提供浏览器加载页面的详尽信息</li>\n<li>screen对象，提供关于用户屏幕分辨率的详尽信息</li>\n<li>performance对象，提供浏览器内存占用，导航行为和事件统计的详尽信息</li>\n<li>对cookie的支持</li>\n<li>其他自定义对象，如XMLHttpRequest和IE的ActiveXObject</li>\n</ul>\n<h2 id=\"1.3-javascript版本\">1.3 JavaScript版本<a title=\"#1.3-javascript版本\" href=\"#1.3-javascript版本\"></a></h2>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>浏览器</th>\n<th>JavaScript版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Netscape Navigator2</td>\n<td>1.0</td>\n</tr>\n<tr>\n<td>Netscape Navigator3</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>Netscape Navigator4</td>\n<td>1.2</td>\n</tr>\n<tr>\n<td>Netscape Navigator4.06</td>\n<td>1.3</td>\n</tr>\n<tr>\n<td>Navigator6+（Mozilla0.6.0+）</td>\n<td>1.5</td>\n</tr>\n<tr>\n<td>Firefox1</td>\n<td>1.5</td>\n</tr>\n<tr>\n<td>Firefox1.5</td>\n<td>1.6</td>\n</tr>\n<tr>\n<td>Firefox2</td>\n<td>1.7</td>\n</tr>\n<tr>\n<td>Firefox3</td>\n<td>1.8</td>\n</tr>\n<tr>\n<td>Firefox3.5</td>\n<td>1.8.1</td>\n</tr>\n<tr>\n<td>Firefox3.6</td>\n<td>1.8.2</td>\n</tr>\n<tr>\n<td>Firefox4</td>\n<td>1.8.5</td>\n</tr>\n</tbody>\n</table></div></div><blockquote>\n<p>Netscape/Mozilla仍然沿用这种版本方案，而IE的JScript有不同的版本号规则</p>\n<p>多数浏览器对JavaScript的支持，指的是实现ECMAScript和DOM的程度</p>\n</blockquote>\n<h2 id=\"1.4-小结\">1.4 小结<a title=\"#1.4-小结\" href=\"#1.4-小结\"></a></h2>\n<p>JavaScript是一门用来于网页交互的脚本语言，包含以下三个组成部分：</p>\n<ul>\n<li>ECMAScript</li>\n<li>DOM</li>\n<li>BOM</li>\n</ul>\n<p>JavaScript的这三个部分得到了五大web浏览器（IE、Firefox、Chrome、Safari和Opera）不同程度的支持；</p>\n<p>所有浏览器基本上对ES5提供了完善的支持，对ES6和ES7的支持度也在不断提升；</p>\n<p>这些浏览器对DOM的支持各不相同，但对Level3的支持日益趋于规范；</p>\n<p>HTML5中收录的BOM会因浏览器而异，不过开发者可以假定存在很大一部分公共特性</p>\n","prev":{"title":"红宝书 - 第2章 HTML中的JavaScript","link":"readNotes/2"},"next":{"title":"flex 布局","link":"learningNotes/further/flex"},"plink":"https://shylees.github.io/readNotes/1/","toc":[{"id":"1.1-简短的历史回顾","title":"1.1 简短的历史回顾","index":"1"},{"id":"1.2-javascript实现","title":"1.2 JavaScript实现","index":"2","children":[{"id":"1.2.1-ecmascript","title":"1.2.1 ECMAScript","index":"2.1"},{"id":"1.2.2-dom","title":"1.2.2 DOM","index":"2.2"},{"id":"1.2.3-bom","title":"1.2.3 BOM","index":"2.3"}]},{"id":"1.3-javascript版本","title":"1.3 JavaScript版本","index":"3"},{"id":"1.4-小结","title":"1.4 小结","index":"4"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"3245 words in 16 min"}