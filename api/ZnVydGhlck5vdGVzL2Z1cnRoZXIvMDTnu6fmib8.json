{"title":"保姆级理解js各种继承方案","date":"2022-09-17T08:37:38.000Z","date_formatted":{"ll":"Sep 17, 2022","L":"09/17/2022","MM-DD":"09-17"},"link":"furtherNotes/further/04继承","tags":["JavaScript"],"categories":["furtherNotes"],"updated":"2022-09-23T15:47:51.000Z","content":"<h1 id=\"js继承方案\">js继承方案<a title=\"#js继承方案\" href=\"#js继承方案\"></a></h1>\n<p>继承本质：复制，重写原型对象，代之以一个新类型的实例</p>\n<h2 id=\"1.-原型链继承\">1. 原型链继承<a title=\"#1.-原型链继承\" href=\"#1.-原型链继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;parent&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\">property</span>.<span class=\"property\">getName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;son&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">property</span> = <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Parent</span>();</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getProperty</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">property</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>();</span><br><span class=\"line\">son.<span class=\"title function_\">getName</span>();    <span class=\"comment\">// son</span></span><br><span class=\"line\">son.<span class=\"title function_\">getProperty</span>(); <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Son.prototype</span></span><br><span class=\"line\"><span class=\"title class_\">Parent</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">getPrototype</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;parent&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">getName</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">        <span class=\"attr\">constructor</span>: f <span class=\"title class_\">Parent</span>(),</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;son&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">prototype</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Parent</span> &#123;       <span class=\"comment\">// 原型对象指向 Parent</span></span><br><span class=\"line\">        <span class=\"attr\">getPrototype</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;parent&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 原Son.prototype</span></span><br><span class=\"line\"><span class=\"attr\">constructor</span>: f &#123;</span><br><span class=\"line\">    <span class=\"attr\">constructor</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>核心代码：<code> Son.prototype = new Parent()</code></p>\n<p>优点：</p>\n<ol>\n<li>继承了父类原型上的属性和方法</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>多个<code>Son</code>实例对<code>new Parent()</code>后拥有的属性进行操作时，都是操作同一个属性；</li>\n<li><code>Son</code>的原型上的 <code>constructor</code> 属性没了；</li>\n<li>给<code>Son</code>的原型增加属性和方法必须在替换原型后，否则会被覆盖；</li>\n<li>创建<code>Son</code>实例时无法向<code>Parent</code>的构造函数传参</li>\n</ol>\n<h2 id=\"2.-构造函数继承\">2. 构造函数继承<a title=\"#2.-构造函数继承\" href=\"#2.-构造函数继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = [<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;pink&#x27;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getColor</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">color</span>.<span class=\"title function_\">toString</span>())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;son&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>();</span><br><span class=\"line\">son1.<span class=\"property\">color</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;blue&#x27;</span>) <span class=\"comment\">// this.color = [&#x27;red&#x27;, &#x27;pink&#x27;, &#x27;blue&#x27;]</span></span><br><span class=\"line\">son1.<span class=\"title function_\">getColor</span>();  <span class=\"comment\">// getColor is not defined!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son2 = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>();</span><br><span class=\"line\">son2.<span class=\"property\">color</span> <span class=\"comment\">// [&#x27;red&#x27;, &#x27;pink&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Son.prototype</span></span><br><span class=\"line\"><span class=\"attr\">constructor</span>:f &#123;     <span class=\"comment\">// 原型链继承是 Parent</span></span><br><span class=\"line\">    <span class=\"attr\">constructor</span>: f <span class=\"title class_\">Son</span>(),</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">constructor</span>: f <span class=\"title class_\">Object</span>(), <span class=\"comment\">// 原型链继承是 Parent </span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son1</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;son&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;  <span class=\"comment\">// 原型链继承是 Parent&#123;&#125;</span></span><br><span class=\"line\">        <span class=\"attr\">constructor</span>: f <span class=\"title class_\">Son</span>(),  </span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>核心代码： <code>Parent.call(this)</code></p>\n<p>在实例化每一个<code>Son</code>时，执行 <code>Parent</code> 的构造函数</p>\n<p>优点：</p>\n<ol>\n<li>对于每一个<code>Son</code>的实例，都能独有一份父类的属性和方法</li>\n<li>能给父类传参</li>\n<li><code>Son</code> 原型上有其原本的 <code>constructor</code></li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>只能继承父类构造函数里的属性方法，不能继承父类原型上的属性方法</li>\n<li>每个子类在最初都有一样的完整的父类实例副本，无法复用</li>\n</ol>\n<h2 id=\"3.-组合继承\">3. 组合继承<a title=\"#3.-组合继承\" href=\"#3.-组合继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = [<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;pink&#x27;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\">name, age</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, name);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Parent</span>();</span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Son</span>;  </span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getAge</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">age</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;son&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">son.<span class=\"property\">color</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;blue&#x27;</span>)  <span class=\"comment\">// [&#x27;red&#x27;,&#x27;pink&#x27;,&#x27;blue&#x27;]</span></span><br><span class=\"line\">son.<span class=\"title function_\">getName</span>(); <span class=\"comment\">//son</span></span><br><span class=\"line\">son.<span class=\"title function_\">getAge</span>();  <span class=\"comment\">// 12</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;son1&#x27;</span>, <span class=\"number\">15</span>);</span><br><span class=\"line\">son.<span class=\"property\">color</span>  <span class=\"comment\">// [&#x27;red&#x27;,&#x27;pink&#x27;]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Son.prototype</span></span><br><span class=\"line\"><span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>:&#123;</span><br><span class=\"line\">        <span class=\"attr\">getAge</span>: f (),</span><br><span class=\"line\">        <span class=\"attr\">getName</span>: f (),</span><br><span class=\"line\">        <span class=\"attr\">constructor</span>: f <span class=\"title class_\">Parent</span>(name),</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span>&#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;son&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>核心代码：</p>\n<ol>\n<li><code>Parent.call(this)</code> 为每一个子类实例，获得独一份父类的属性方法 — <strong>构造函数继承</strong></li>\n<li><code>Son.prototype = new Parent()</code>  讲父类的原型 传递给子类的原型对象<code>__proto__</code>  — <strong>原型链继承</strong></li>\n<li><code>Son.constructor = Son</code> 弥补覆盖原型后 Son 的constructor不存在</li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>继承了父类的原型</li>\n<li>每个子类实例拥有独一份的父类属性方法</li>\n<li>子类的<code>constructor</code>属性存在</li>\n<li>利用原型链取值原则，屏蔽了与子元素同名的属性的获取</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>\n<p>在 <code>Son.prototype = new Parent()</code>时，会执行一次父类构造函数，给子类原型增加父类的属性方法；</p>\n<p>在 实例化子类时， 会调用<code>Parent.call(this)</code>， 再执行一次父类构造函数，给子类增加父类的属性方法；</p>\n<blockquote>\n<p>在不用的地方有完全一模一样的属性方法被两次写入，冗余</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"4.-原型式继承\">4. 原型式继承<a title=\"#4.-原型式继承\" href=\"#4.-原型式继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">object</span>(<span class=\"params\">obj</span>)&#123; <span class=\"comment\">// obj 父类 返回obj的原型对象</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">F</span>(<span class=\"params\"></span>)&#123;&#125;;</span><br><span class=\"line\">    F.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = obj;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title function_\">F</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;parent&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 分布解读</span></span><br><span class=\"line\"><span class=\"comment\">// 1. function F()&#123;&#125;;</span></span><br><span class=\"line\"><span class=\"comment\">// F.prototype </span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">constructor</span>: f <span class=\"title function_\">F</span>(),</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. F.prototype = Parent;    // 浅复制 Parent</span></span><br><span class=\"line\"><span class=\"comment\">// F.prototype</span></span><br><span class=\"line\"><span class=\"title class_\">Parent</span>()&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = <span class=\"string\">&#x27;parent&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// F.prototype = person F.prototye</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd,</span></span><br><span class=\"line\"><span class=\"string\">    __proto__: Object</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">// 3. new F();  返回值 原型对象 指向传入对象 的实例</span></span><br><span class=\"line\"><span class=\"string\">// Parent</span></span><br><span class=\"line\"><span class=\"string\">F&#123;</span></span><br><span class=\"line\"><span class=\"string\">    __proto__: f Parent()&#123;</span></span><br><span class=\"line\"><span class=\"string\">        arguments, caller, length, name:&quot;Parent&quot;,</span></span><br><span class=\"line\"><span class=\"string\">        prototype:&#123;...&#125;,</span></span><br><span class=\"line\"><span class=\"string\">        __proto__: f ()</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br><span class=\"line\"><span class=\"string\">// person</span></span><br><span class=\"line\"><span class=\"string\">F&#123;</span></span><br><span class=\"line\"><span class=\"string\">    __proto__: &#123;</span></span><br><span class=\"line\"><span class=\"string\">        name: &#x27;</span>dddd<span class=\"string\">&#x27;,</span></span><br><span class=\"line\"><span class=\"string\">        __proto__: Object</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">    name : <span class=\"string\">&#x27;dddd&#x27;</span>;</span><br><span class=\"line\">    color : [<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;pink&#x27;</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> man = <span class=\"title function_\">object</span>(person);</span><br><span class=\"line\">man.<span class=\"property\">name</span> = <span class=\"string\">&#x27;man&#x27;</span>;</span><br><span class=\"line\">man.<span class=\"property\">color</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;blue&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> man1 = <span class=\"title function_\">object</span>(person);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// man</span></span><br><span class=\"line\">F&#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;man&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// man1</span></span><br><span class=\"line\">F&#123;</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>, <span class=\"string\">&#x27;blue&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>核心代码：<code>function object(obj)&#123; function F(); F.prototype = obj; return new F();&#125;</code></p>\n<p>优点：</p>\n<ol>\n<li>继承了父类的原型</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li><code>obj</code>是函数时，子类无法得到父类构造函数的属性和方法</li>\n<li><code>F.prototype = obj </code> 是浅复制，所以所有子类操作的是父类同一个引用类型数据</li>\n<li>无法传递参数</li>\n<li><code>object()</code> 可以用 <code>es5</code> 的 <code>Object.create()</code> 替代</li>\n</ol>\n<h2 id=\"5.-寄生式继承\">5. 寄生式继承<a title=\"#5.-寄生式继承\" href=\"#5.-寄生式继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">create</span>(<span class=\"params\">ori</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> clone = <span class=\"title function_\">object</span>(ori);</span><br><span class=\"line\">    <span class=\"comment\">// 可在此增强对象</span></span><br><span class=\"line\">    clone.<span class=\"property\">getName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> clone; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> person = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>]</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">person.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getColor</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">color</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son = <span class=\"title function_\">create</span>(person);</span><br><span class=\"line\">son.<span class=\"property\">name</span> = <span class=\"string\">&#x27;son&#x27;</span>;</span><br><span class=\"line\">son.<span class=\"property\">color</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;pink&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son1 = <span class=\"title function_\">create</span>(person);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son</span></span><br><span class=\"line\">F &#123;</span><br><span class=\"line\">    <span class=\"attr\">getName</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;son&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        color : [<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;pink&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son1</span></span><br><span class=\"line\">F &#123;</span><br><span class=\"line\">    <span class=\"attr\">getName</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">        color : [<span class=\"string\">&#x27;red&#x27;</span>,<span class=\"string\">&#x27;pink&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&#x27;dddd&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>核心代码：<code>function create(ori)&#123; let clone = object(ori); clone.getName = function()&#123;&#125;; return clone; &#125;</code></p>\n<p>跟原型继承的区别：</p>\n<ol>\n<li>能增强对象，为构造函数新增属性方法，增强函数</li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>继承了父类的原型</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li><code>obj</code>是函数时，子类无法得到父类构造函数的属性和方法</li>\n<li><code>F.prototype = obj </code> 是浅复制，所以所有子类操作的是父类同一个引用类型数据</li>\n<li>无法传递参数</li>\n<li><code>object()</code> 可以用 <code>es5</code> 的 <code>Object.create()</code> 替代</li>\n</ol>\n<h2 id=\"6.-寄生组合式继承\">6. 寄生组合式继承<a title=\"#6.-寄生组合式继承\" href=\"#6.-寄生组合式继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">inherit</span>(<span class=\"params\">son, parent</span>)&#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> prototype = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(parent.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\">    prototype.<span class=\"property\">constructor</span> = son;</span><br><span class=\"line\">    son.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = prototype;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Parent</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">color</span> = [<span class=\"string\">&#x27;red&#x27;</span>]</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">getName</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">name</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getColor</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">color</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\">name, age</span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, name);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">inherit</span>(son, parent);    <span class=\"comment\">// 将son的原型对象指向 parent的原型</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">getAge</span> = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"variable language_\">this</span>.<span class=\"property\">age</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;son&#x27;</span>, <span class=\"number\">12</span>);</span><br><span class=\"line\">son.<span class=\"property\">name</span> = <span class=\"string\">&#x27;sonson0&#x27;</span>;</span><br><span class=\"line\">son.<span class=\"property\">color</span>.<span class=\"title function_\">push</span>(<span class=\"string\">&#x27;pink&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son1 = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;son1&#x27;</span>, <span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;sonson0&#x27;</span>,                  <span class=\"comment\">// 继承父类实例</span></span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>, <span class=\"string\">&#x27;pink&#x27;</span>],           <span class=\"comment\">// 继承父类实例</span></span><br><span class=\"line\">    <span class=\"attr\">getName</span>: f (),                    <span class=\"comment\">// 继承父类实例</span></span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">12</span>,                          <span class=\"comment\">// 子类实例</span></span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Parent</span> &#123;</span><br><span class=\"line\">    \t<span class=\"attr\">constructor</span>: <span class=\"title class_\">Son</span> (name, age), </span><br><span class=\"line\">        <span class=\"attr\">getAge</span>: f (),\t\t\t\t  <span class=\"comment\">// 继承子类原型</span></span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">constructor</span>: <span class=\"title class_\">Parent</span>(),   </span><br><span class=\"line\">            <span class=\"attr\">getColor</span>: <span class=\"title function_\">f</span>(),            <span class=\"comment\">// 继承父类原型</span></span><br><span class=\"line\">            <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son1</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"literal\">undefined</span>,</span><br><span class=\"line\">    <span class=\"attr\">color</span>: [<span class=\"string\">&#x27;red&#x27;</span>],</span><br><span class=\"line\">    <span class=\"attr\">getName</span>: f (),</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Parent</span> &#123;</span><br><span class=\"line\">    \t<span class=\"attr\">constructor</span>: <span class=\"title class_\">Son</span> (name, age),</span><br><span class=\"line\">        <span class=\"attr\">getAge</span>: f (),</span><br><span class=\"line\">        <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span> &#123;</span><br><span class=\"line\">            <span class=\"attr\">constructor</span>: <span class=\"title class_\">Parent</span>(),</span><br><span class=\"line\">            <span class=\"attr\">getColor</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">            <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>核心代码：</p>\n<pre><code>`son.prototype = Object.create(parent.prototype); son.prototye.constructor = son `    — **寄生模式**\n</code></pre>\n<p>​       <code>Parent.call(this)</code> — <strong>构造函数传参</strong></p>\n<p>与组合继承的区别在于：</p>\n<ol>\n<li>组合继承使用 <code>son.prototype = new Parent()</code> ； 而寄生组合使用 <code>son.prototype = Object.create(Parent.prototype)</code></li>\n<li>组合会执行两次<code>Parent.call(this)</code> ；寄生组合只会在实例化 <code>Son</code> 时，执行一次 <code>Parent.call(this)</code></li>\n</ol>\n<p>优点：</p>\n<ol>\n<li>最成熟的继承实现方法，也是库实现的方法</li>\n</ol>\n<h2 id=\"7.-混入方式继承\">7. 混入方式继承<a title=\"#7.-混入方式继承\" href=\"#7.-混入方式继承\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Son</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title class_\">Parent</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">    <span class=\"title class_\">Parent2</span>.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(<span class=\"title class_\">Parent</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>);</span><br><span class=\"line\"><span class=\"title class_\">Object</span>.<span class=\"title function_\">assign</span>(<span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, <span class=\"title class_\">Parent2</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>); <span class=\"comment\">// 将Parent2.prototype 拷贝到 Son.prototype</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title class_\">Son</span>.<span class=\"property\"><span class=\"keyword\">prototype</span></span>.<span class=\"property\">constructor</span> = <span class=\"title class_\">Son</span>;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8.-es6类继承-extends\">8. es6类继承 extends<a title=\"#8.-es6类继承-extends\" href=\"#8.-es6类继承-extends\"></a></h2>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    getName = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"property\">name</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    setName = <span class=\"keyword\">function</span>(<span class=\"params\">name</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">name</span> = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Son</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Parent</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_\">constructor</span>(<span class=\"params\">name, age</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">super</span>(name);</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    getAge = <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tsetAge = <span class=\"keyword\">function</span>(<span class=\"params\">age</span>)&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">this</span>.<span class=\"property\">age</span> = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> son = <span class=\"keyword\">new</span> <span class=\"title class_\">Son</span>(<span class=\"string\">&#x27;son&#x27;</span>, <span class=\"number\">12</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// son</span></span><br><span class=\"line\"><span class=\"title class_\">Son</span> = &#123;</span><br><span class=\"line\">    <span class=\"attr\">age</span>: <span class=\"number\">12</span>,</span><br><span class=\"line\">    <span class=\"attr\">name</span>: <span class=\"string\">&#x27;son&#x27;</span>,</span><br><span class=\"line\">    <span class=\"attr\">getAge</span>: <span class=\"title function_\">f</span>(), <span class=\"attr\">setAge</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">getName</span>: <span class=\"title function_\">f</span>(), <span class=\"attr\">setName</span>: <span class=\"title function_\">f</span>(),</span><br><span class=\"line\">    <span class=\"attr\">__proto__</span>: <span class=\"title class_\">Parent</span>&#123;</span><br><span class=\"line\">    \t<span class=\"attr\">constructor</span>: <span class=\"keyword\">class</span> <span class=\"title class_\">Son</span>,</span><br><span class=\"line\">    \t<span class=\"attr\">__proto__</span>: &#123;</span><br><span class=\"line\">    \t\t<span class=\"attr\">constructor</span>: <span class=\"keyword\">class</span> <span class=\"title class_\">Parent</span>,</span><br><span class=\"line\">    \t\t<span class=\"attr\">__proto__</span>: <span class=\"title class_\">Object</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>extends 关键字的核心代码实现</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">_inherits</span>(<span class=\"params\">subType, superType</span>) &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 创建对象，创建父类原型的一个副本</span></span><br><span class=\"line\">    <span class=\"comment\">// 增强对象，弥补因重写原型而失去的默认的constructor 属性</span></span><br><span class=\"line\">    <span class=\"comment\">// 指定对象，将新创建的对象赋值给子类的原型</span></span><br><span class=\"line\">    subType.<span class=\"property\"><span class=\"keyword\">prototype</span></span> = <span class=\"title class_\">Object</span>.<span class=\"title function_\">create</span>(superType &amp;&amp; superType.<span class=\"property\"><span class=\"keyword\">prototype</span></span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">constructor</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">value</span>: subType,</span><br><span class=\"line\">            <span class=\"attr\">enumerable</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">            <span class=\"attr\">writable</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            <span class=\"attr\">configurable</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (superType) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Object</span>.<span class=\"property\">setPrototypeOf</span> </span><br><span class=\"line\">            ? <span class=\"title class_\">Object</span>.<span class=\"title function_\">setPrototypeOf</span>(subType, superType) </span><br><span class=\"line\">            : subType.<span class=\"property\">__proto__</span> = superType;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>参考文章：<a href=\"https://juejin.cn/post/6844903696111763470\">https://juejin.cn/post/6844903696111763470</a></p>\n<p><a href=\"https://muyiy.cn/blog/5/5.2.html\">https://muyiy.cn/blog/5/5.2.html</a></p>\n</blockquote>\n","prev":{"title":"HTTP状态码 - RFC2616","link":"furtherNotes/further/04 http 状态码"},"next":{"title":"深入js原型 prototype、原型对象 __proto__ [[prototype]]、原型链","link":"furtherNotes/further/03原型"},"plink":"https://shylees.github.io/furtherNotes/further/04继承/","toc":[{"id":"js继承方案","title":"js继承方案","index":"1","children":[{"id":"1.-原型链继承","title":"1. 原型链继承","index":"1.1"},{"id":"2.-构造函数继承","title":"2. 构造函数继承","index":"1.2"},{"id":"3.-组合继承","title":"3. 组合继承","index":"1.3"},{"id":"4.-原型式继承","title":"4. 原型式继承","index":"1.4"},{"id":"5.-寄生式继承","title":"5. 寄生式继承","index":"1.5"},{"id":"6.-寄生组合式继承","title":"6. 寄生组合式继承","index":"1.6"},{"id":"7.-混入方式继承","title":"7. 混入方式继承","index":"1.7"},{"id":"8.-es6类继承-extends","title":"8. es6类继承 extends","index":"1.8"}]}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"2214 words in 11 min"}