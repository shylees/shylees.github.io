{"title":"vue组件通信的方式","date":"2021-12-06T16:00:00.000Z","date_formatted":{"ll":"Dec 7, 2021","L":"12/07/2021","MM-DD":"12-07"},"link":"furtherNotes/further/03 vue组件通信","tags":["vue"],"categories":["furtherNotes"],"updated":"2021-12-06T16:00:00.000Z","content":"<blockquote>\n<p>参考链接：</p>\n<p><a href=\"https://juejin.cn/post/6844903887162310669\">https://juejin.cn/post/6844903887162310669</a>  8</p>\n<p><a href=\"https://juejin.cn/post/6999687348120190983\">https://juejin.cn/post/6999687348120190983</a>  12</p>\n<p><a href=\"https://vue3js.cn/interview/vue/communication.html\">https://vue3js.cn/interview/vue/communication.html</a> 8</p>\n</blockquote>\n<h2 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h2>\n<ul>\n<li>父子之间的通信：<code>props</code> ; <code>$parent / $children</code>；<code>provide / inject</code>；<code>ref</code> ；<code>$attrs / $listeners</code></li>\n<li>兄弟组件通信：<code>eventBus</code>；<code>vuex</code></li>\n<li>跨级通信：<code>eventBus</code>；<code>Vuex</code>；<code>provide / inject</code>；<code>$attrs / $listenters</code></li>\n</ul>\n<h2 id=\"组件通信有哪几种方式\">组件通信有哪几种方式<a title=\"#组件通信有哪几种方式\" href=\"#组件通信有哪几种方式\"></a></h2>\n<h4 id=\"1.props-/-$emit：\">1.props / $emit：<a title=\"#1.props-/-$emit：\" href=\"#1.props-/-$emit：\"></a></h4>\n<p>适用场景：父组件传递数据给子组件 / 子组件传递数据给父组件</p>\n<p>父组件向子组件传递数据是通过 props 传递的，子组件传递数据给父组件是通过 $emit 触发事件 做到的</p>\n<h4 id=\"2.-$children-/-$parent：\">2. $children / $parent：<a title=\"#2.-$children-/-$parent：\" href=\"#2.-$children-/-$parent：\"></a></h4>\n<p>指定已创建的实例之父实例，在两者之间建立父子关系。子实例可以用 this.$parent 访问父实例，子实例被推入父实例的 $children 数组中。</p>\n<blockquote>\n<p>$parent 是对象；$children 是数组</p>\n<p>其目的主要是作为访问组件的应急方法，更推荐 props 和 event 实现父子通信</p>\n</blockquote>\n<h4 id=\"3.-provide-/-inject：\">3. provide / inject：<a title=\"#3.-provide-/-inject：\" href=\"#3.-provide-/-inject：\"></a></h4>\n<p>父组件通过 provide 来提供变量，然后在子组件中通过 inject 来注入变量</p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// A.vue</span><br><span class=\"line\">&lt;div&gt; &lt;comB&gt;&lt;/comB&gt; &lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    name:&quot;A&quot;,</span><br><span class=\"line\">    provide:&#123; for: &quot;demo&quot; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// B.vue</span><br><span class=\"line\">&lt;div&gt; &#123;&#123; demo &#125;&#125; &lt;comC&gt;&lt;/comC&gt; &lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    name:&quot;B&quot;,</span><br><span class=\"line\">    inject:[&#x27;for&#x27;],</span><br><span class=\"line\">    data()&#123; return &#123; demo:this.for &#125; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// C.vue</span><br><span class=\"line\">&lt;div&gt; &#123;&#123; demo &#125;&#125; &lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    name:&quot;C&quot;,</span><br><span class=\"line\">    inject:[&#x27;for&#x27;],</span><br><span class=\"line\">    data()&#123; return &#123; demo:this.for &#125; &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"4.-ref-/-$refs\">4. ref / $refs<a title=\"#4.-ref-/-$refs\" href=\"#4.-ref-/-$refs\"></a></h4>\n<p>适用场景：父组件在使用子组件时设置 ref、父组件通过设置在子组件 refs 获取数据</p>\n<p>ref 如果在普通的 dom 元素使用，引用指向的就是 dom 元素；</p>\n<p>如果用在子组件上，引用就指向组件实例，可以<strong>通过实例直接调用组件的方法或访问数据</strong></p>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// app.vue</span><br><span class=\"line\">&lt;div&gt; &lt;comA ref=&quot;comA&quot;&gt;&lt;/comA&gt; &lt;/div&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    mounted()&#123;</span><br><span class=\"line\">        const comA = this.$refs.comA;</span><br><span class=\"line\">        const nameA = comA.name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// comA.vue</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default&#123;</span><br><span class=\"line\">    data()&#123;</span><br><span class=\"line\">        return &#123;</span><br><span class=\"line\">            name:&#x27;A&#x27;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"5.-eventbus\">5. <strong>eventBus</strong><a title=\"#5.-eventbus\" href=\"#5.-eventbus\"></a></h4>\n<p>使用场景：兄弟组件传值</p>\n<p>事件总线，在 vue 中可以使用其作为沟通桥梁的概念，就像是所有组件共用相同的事件中心，可以向该中心注册发送事件或接收事件，所有组件都可以通知其他组件。当项目比较大的时候，容易造成难以维护的灾难。</p>\n<blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 初始化</span></span><br><span class=\"line\"><span class=\"comment\">// event-bus.js</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Vue</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">const</span> <span class=\"title class_\">EventBus</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Vue</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. 发送事件</span></span><br><span class=\"line\"><span class=\"comment\">// showNumCom 和 additionNumCom 是兄弟组件 其实是父子也可以</span></span><br><span class=\"line\"><span class=\"comment\">// additionNum.vue</span></span><br><span class=\"line\">&lt;div&gt;  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">button</span> @<span class=\"attr\">click</span>=<span class=\"string\">&quot;additionHandle&quot;</span> &gt;</span>+<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span>  &lt;/div&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">EventBus</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./event-bus.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">num</span>:<span class=\"number\">1</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">methods</span>:&#123;</span><br><span class=\"line\">        <span class=\"title function_\">additionHandle</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"title class_\">EventBus</span>.$emit(<span class=\"string\">&#x27;addition&#x27;</span>,&#123; <span class=\"attr\">num</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">num</span>++ &#125;)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 3. 接收事件</span></span><br><span class=\"line\"><span class=\"comment\">// showNum.vue</span></span><br><span class=\"line\">&lt;div&gt; 计算和:&#123;&#123;count&#125;&#125; &lt;/div&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;<span class=\"title class_\">EventBus</span>&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./event-bus.js&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">data</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> &#123; <span class=\"attr\">count</span>:<span class=\"number\">0</span> &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"title function_\">mounted</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">        <span class=\"title class_\">EventBus</span>.$on(<span class=\"string\">&#x27;addition&#x27;</span>,<span class=\"function\"><span class=\"params\">param</span> =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">this</span>.<span class=\"property\">count</span> = <span class=\"variable language_\">this</span>.<span class=\"property\">count</span> + param.<span class=\"property\">num</span>;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 实现了在组件 additionNum 中点击 + ，在 showNum 中利用传递来的 num 展示求和的结果</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 4. 溢出事件监听者</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123;eventBus&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;event-bus.js&#x27;</span></span><br><span class=\"line\"><span class=\"title class_\">EventBus</span>.$off(<span class=\"string\">&#x27;addition&#x27;</span>,&#123;&#125;)</span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4 id=\"6.-vuex\">6. Vuex<a title=\"#6.-vuex\" href=\"#6.-vuex\"></a></h4>\n<p>vuex 是一个专门为 vue.js 应用程序开发的状态管理模式。它采用集中式存储管理应用的所有组建的 状态，并以相应的规则保证状态以一种可预测的方式发生变化。vuex 解决了 <strong>多个视图依赖于同一状态</strong> 和 <strong>来自不同视图的行为需要变更同一状态</strong> 的问题，讲开发者的精力聚焦于数据的更新而不是数据在组件之间的传递上</p>\n<ul>\n<li>state：用于数据的存储，是 store 中的唯一数据源</li>\n<li>getters：如 computed，基于 state 数据的二次包装，常用于数据的筛选和多个数据的相关性计算</li>\n<li>mutations：类似函数，改变 state 数据的唯一途径，且不能用于处理异步事件</li>\n<li>actions：类似于 mutation，用于提交 mutation 来改变状态，而不直接变更状态，可以包含任意异步操作</li>\n<li>modules：类似命名空间，用于项目中将各个模块的状态分开定义和操作</li>\n</ul>\n<h4 id=\"7.-localstorage-/-seesionstorage\">7. localStorage / seesionStorage<a title=\"#7.-localstorage-/-seesionstorage\" href=\"#7.-localstorage-/-seesionstorage\"></a></h4>\n<h4 id=\"8.--$attrs-/-$listeners\">8.  $attrs / $listeners<a title=\"#8.--$attrs-/-$listeners\" href=\"#8.--$attrs-/-$listeners\"></a></h4>\n<p>使用场景：祖先传递数据给子孙</p>\n<ul>\n<li>$attrs：包含父作用域里除 class 和 style 除外的非 props <strong>属性集合</strong>。通过 this.$attrs 获取父作用域中所有符合条件的属性集合，若还要继续传给子组件内部的其他组件，可以通过 v-bind=‘$attrs’</li>\n<li>$listeners：包含父作用域里 .native 除外的监听<strong>事件集合</strong>。如果还要继续传给子组件内部的其他组件，可以通过 v-on=“$linteners”</li>\n<li><strong>inheritAttrs</strong></li>\n</ul>\n<blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// parent.vue</span><br><span class=\"line\">&lt;child name=&quot;name&quot; title=&#x27;111&#x27;&gt;&lt;/child&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">// child.vue</span><br><span class=\"line\">&lt;sun-child v-bind=&quot;$attrs&quot;&gt;&lt;/sun-child&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export defalut&#123;</span><br><span class=\"line\">\tprops:[&#x27;name&#x27;], //这里可以接收也可不接收，if接收，this.$arrts 中就会少一个值</span><br><span class=\"line\">\tmounted()&#123;</span><br><span class=\"line\">\t\tconsole.log(this.$attrs); // &#123;title:111&#125; , </span><br><span class=\"line\">                                  // if 上无接收 &#123;name:&#x27;name&#x27;,...&#125;</span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">    inheritAttrs: false, // 可以关闭自动挂载到组件根元素上的没有在props声明的属性</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n","prev":{"title":"为什么 data 属性是一个函数而不是一个对象？","link":"furtherNotes/further/02 组件中的data是函数"},"next":{"title":"MVC MVP MVVM","link":"furtherNotes/further/01 MVC MVP MVVM"},"plink":"https://shylees.github.io/furtherNotes/further/03 vue组件通信/","toc":[{"id":"总结","title":"总结","index":"1"},{"id":"组件通信有哪几种方式","title":"组件通信有哪几种方式","index":"2"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"1270 words in 6 min"}