{"title":"同源策略","date":"2021-11-11T16:00:00.000Z","date_formatted":{"ll":"Nov 12, 2021","L":"11/12/2021","MM-DD":"11-12"},"link":"furtherNotes/further/02 同源策略 跨域","tags":["网络"],"categories":["furtherNotes"],"updated":"2021-11-11T16:00:00.000Z","content":"<blockquote>\n<p>ajax 引申内容</p>\n</blockquote>\n<h3 id=\"0.-为什么会有同源策略\">0. 为什么会有同源策略<a title=\"#0.-为什么会有同源策略\" href=\"#0.-为什么会有同源策略\"></a></h3>\n<p><strong>简单来说是为了安全</strong></p>\n<p>1.为了防止恶意网页可以获取其他网站的本地数据。</p>\n<p>2.为了防止恶意网站<a href=\"https://so.csdn.net/so/search?q=iframe&amp;spm=1001.2101.3001.7020\" target=\"_blank\">iframe</a>其他网站的时候，获取数据。</p>\n<p>3.为了防止恶意网站在自已网站有访问其他网站的权利，以免通过cookie免登，拿到数据。</p>\n<h3 id=\"1.-同源策略\">1. 同源策略<a title=\"#1.-同源策略\" href=\"#1.-同源策略\"></a></h3>\n<p>指 “协议 + 域名 + 端口” 三者相同</p>\n<p><strong>同源策略限制js能力，其限制的内容有：</strong></p>\n<ul>\n<li>\n<p>Cookie、LocalStorage、indexedDB 等存储型内容</p>\n</li>\n<li>\n<p>DOM 节点</p>\n</li>\n<li>\n<p>AJAX 请求被浏览器拦截</p>\n<blockquote>\n<p>请求能发出去，服务器端能收到请求并正常返回结构，结果被浏览器拦截了</p>\n</blockquote>\n</li>\n</ul>\n<p>但<strong>所有 src 和 href 属性都不受同源策略限制</strong>，可以请求第三方服务器数据内容</p>\n<h3 id=\"2.-什么情况会造成跨域\">2. 什么情况会造成跨域<a title=\"#2.-什么情况会造成跨域\" href=\"#2.-什么情况会造成跨域\"></a></h3>\n<p>当协议、子域名、主域名、端口号中</p>\n<h3 id=\"3.-解决跨域的方式\">3. 解决跨域的方式<a title=\"#3.-解决跨域的方式\" href=\"#3.-解决跨域的方式\"></a></h3>\n<h5 id=\"3.1-jsonp：只能解决-get-跨域\">3.1 jsonp：只能解决 get 跨域<a title=\"#3.1-jsonp：只能解决-get-跨域\" href=\"#3.1-jsonp：只能解决-get-跨域\"></a></h5>\n<ul>\n<li>原理：<strong>利用 script 标签的 src 属性不受同源策略限制。</strong> 网页可以得到从其他来源动态产生的 JSON 数据，jsonp 请求一定要对方的服务器做支持才可以。</li>\n<li>步骤：\n<ol>\n<li>创建 script 标签</li>\n<li>src 设置 接口 url</li>\n<li>接口参数必须要带一个自定义参数名 不然后台无法返回数据</li>\n<li>通过定义函数名去接收后台返回数据</li>\n</ol>\n</li>\n</ul>\n<h5 id=\"3.2-cors：跨域资源共享\">3.2 CORS：跨域资源共享<a title=\"#3.2-cors：跨域资源共享\" href=\"#3.2-cors：跨域资源共享\"></a></h5>\n<ul>\n<li>原理：<strong>服务器设置 Access-Control-Allow-Origin 响应头后，浏览器会允许跨域请求</strong></li>\n<li>限制：浏览器需要支持 html5 ，可以支持 post put 等方法，兼容ie9 以上</li>\n</ul>\n<blockquote>\n<p>后台设置：</p>\n<p>Access-Control-Allow-Origin：*                          允许所有域名访问</p>\n<p>Access-Control-Allow-Origin：<a href=\"http://a.com\">http://a.com</a>      只允许 <a href=\"http://a.com\">a.com</a> 访问</p>\n</blockquote>\n<ul>\n<li>\n<p>使用这种方式解决跨域问题，会在发送请求时出现两种情况，分别为 <strong>简单请求</strong> 和 <strong>复杂请求</strong></p>\n<ul>\n<li>\n<p><strong>简单请求</strong>：使用 GET、HEAD、POST 或者</p>\n<p>​                    Content-Type 的值仅限于 text\\plain、multipart/form-data、application/x-www-form-urlencoded</p>\n<blockquote>\n<p>请求中的任意 XMLHttpRequestUpload 对象均没有注册任何事件监听器</p>\n<p>可以使用 XMLHttpRequest.upload 属性监听</p>\n</blockquote>\n</li>\n<li>\n<p><strong>复杂请求</strong>：不符合上述两个要求的请求。复杂请求的 cors 请求，会在正式通信之前，增加一次 http 查询请求，称为“预检”请求，该请求时 option 方法的，通过该请求来知道服务器是否允许跨域请求</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"3.3-postmessage\">3.3 postMessage<a title=\"#3.3-postmessage\" href=\"#3.3-postmessage\"></a></h5>\n<p>是 html5 XMLHttpRequest level2 中的 api，且是为数不多的可以跨域操作的 window 属性之一</p>\n<p>可以解决：</p>\n<ul>\n<li>页面和其打开的新窗口的数据传递</li>\n<li>多窗口之间消息传递</li>\n<li>页面与嵌套的iframe消息传递</li>\n<li>上面三个场景的跨域数据传递</li>\n</ul>\n<p>postMessage() 方法允许来自不同源的脚本采用异步方式进行有限的通信，可以实现跨文档、多窗口、跨域消息传递。</p>\n<p><code>otherWindow.postMessage(message, targetOrigin, [transfer]);</code></p>\n<h5 id=\"3.4-websocket\">3.4 websocket<a title=\"#3.4-websocket\" href=\"#3.4-websocket\"></a></h5>\n<h5 id=\"3.5-node-中间件代理\">3.5 node 中间件代理<a title=\"#3.5-node-中间件代理\" href=\"#3.5-node-中间件代理\"></a></h5>\n<h5 id=\"3.6-nginx-反向代理\">3.6 nginx 反向代理<a title=\"#3.6-nginx-反向代理\" href=\"#3.6-nginx-反向代理\"></a></h5>\n<h5 id=\"3.7-window.name-+-iframe\">3.7 <a href=\"http://window.name\">window.name</a> + iframe<a title=\"#3.7-window.name-+-iframe\" href=\"#3.7-window.name-+-iframe\"></a></h5>\n<h5 id=\"3.8-location.hash-+-iframe\">3.8 location.hash + iframe<a title=\"#3.8-location.hash-+-iframe\" href=\"#3.8-location.hash-+-iframe\"></a></h5>\n<h5 id=\"3.9--document.domain-+-iframe\">3.9  document.domain + iframe<a title=\"#3.9--document.domain-+-iframe\" href=\"#3.9--document.domain-+-iframe\"></a></h5>\n<ul>\n<li>\n<p>原理：**相同主域名不同子域名下的页面，给页面设置 document.domain 为基础主域，实现同域 **</p>\n<blockquote>\n<p>(二级域名相同的请求下  <a href=\"http://a.text.com\">a.text.com</a>  <a href=\"http://b.text.com\">b.text.com</a>),给页面强制添加 document.domain = ‘<a href=\"http://text.com\">text.com</a>’ 表示二级域名都相同就可以实现跨域</p>\n</blockquote>\n</li>\n<li>\n<p>限制：同域 document 提供的是页面间的互操作，需要载入 iframe 页面</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// a.html</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"> helloa</span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;http://b.zf1.cn:3000/b.html&quot;</span> <span class=\"attr\">frameborder</span>=<span class=\"string\">&quot;0&quot;</span> <span class=\"attr\">onload</span>=<span class=\"string\">&quot;load()&quot;</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;frame&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">iframe</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"variable language_\">document</span>.<span class=\"property\">domain</span> = <span class=\"string\">&#x27;zf1.cn&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">function</span> <span class=\"title function_\">load</span>(<span class=\"params\"></span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">      <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(frame.<span class=\"property\">contentWindow</span>.<span class=\"property\">a</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    &#125;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">// b.html</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">   hellob</span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"variable language_\">document</span>.<span class=\"property\">domain</span> = <span class=\"string\">&#x27;zf1.cn&#x27;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">     <span class=\"keyword\">var</span> a = <span class=\"number\">100</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">   </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h5 id=\"6.4-用apache做转发（逆向代理），让跨域变成同域\">6.4 用Apache做转发（逆向代理），让跨域变成同域<a title=\"#6.4-用apache做转发（逆向代理），让跨域变成同域\" href=\"#6.4-用apache做转发（逆向代理），让跨域变成同域\"></a></h5>\n","prev":{"title":"节流throttle、防抖debounce","link":"furtherNotes/further/05 节流防抖"},"next":{"title":"HTTP 常见状态码 - 图解HTTP","link":"furtherNotes/further/02 常见状态码"},"plink":"https://shylees.github.io/furtherNotes/further/02 同源策略 跨域/","toc":[{"id":"0.-为什么会有同源策略","title":"0. 为什么会有同源策略","index":"1"},{"id":"1.-同源策略","title":"1. 同源策略","index":"2"},{"id":"2.-什么情况会造成跨域","title":"2. 什么情况会造成跨域","index":"3"},{"id":"3.-解决跨域的方式","title":"3. 解决跨域的方式","index":"4"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"977 words in 5 min"}