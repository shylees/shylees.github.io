{"title":"windicss 使用 backgroundImage 做渐变失效的解决方案","date":"2022-06-07T13:30:47.483Z","date_formatted":{"ll":"Jun 7, 2022","L":"06/07/2022","MM-DD":"06-07"},"link":"workNodes/work/12 页面跳转缓存和图片懒预加载","tags":["vite","vue3"],"categories":["workNodes"],"updated":"2022-06-07T13:30:43.799Z","content":"<ol>\n<li>\n<p>在页面跳转的情况下，还是会有资源重新加载的情况，所以使用了 keep-alive</p>\n<ol>\n<li>\n<p>在 router.js 增加允许使用 keep-alive</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"title class_\">VueRouter</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;vue-router&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Home</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./components/Home.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">List</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./components/List.vue&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = <span class=\"title class_\">VueRouter</span>.<span class=\"title function_\">createRouter</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">history</span>: <span class=\"title class_\">VueRouter</span>.<span class=\"title function_\">createWebHashHistory</span>(),</span><br><span class=\"line\">  <span class=\"attr\">routes</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">Home</span>,</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;home&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">requiresAuth</span>: <span class=\"literal\">true</span>, <span class=\"comment\">//</span></span><br><span class=\"line\">        <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span>, <span class=\"comment\">// 允许使用缓存</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"attr\">path</span>: <span class=\"string\">&quot;/list/:category&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">component</span>: <span class=\"title class_\">List</span>,</span><br><span class=\"line\">      <span class=\"attr\">meta</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">name</span>: <span class=\"string\">&quot;list&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">requiresAuth</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        <span class=\"attr\">keepAlive</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  ],</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> router;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在 app.js 使用 keep-alive</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- vue3 写法 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-slot</span>=<span class=\"string\">&quot;&#123; Component &#125;&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">keep-alive</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$route.meta.keepAlive&quot;</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;Component&quot;</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">component</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!$route.meta.keepAlive&quot;</span> <span class=\"attr\">:is</span>=<span class=\"string\">&quot;Component&quot;</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- vue2 写法 --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">keep-alive</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;$route.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">keep-alive</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">router-view</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;!$route.meta.keepAlive&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">router-view</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<blockquote>\n<p><font color=\"red\">如果第一个方法没有效果的话，那么要结合第二个看</font></p>\n</blockquote>\n<ol start=\"2\">\n<li>\n<p>路由回退中 router.go() 与 router.back()</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/qq_42618566/article/details/91045282\">https://blog.csdn.net/qq_42618566/article/details/91045282</a></p>\n</blockquote>\n<ul>\n<li><code>go()</code> 原页面表单中的内容会丢失</li>\n<li><code>back()</code> 原页面表单中的内容会保留\n<ul>\n<li><code>back()</code> 后退</li>\n<li><code>back(0)</code> 刷新</li>\n<li><code>back(1)</code> 前进</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>使用 keep-alive，第二次跳转页面后 不会 触发到原先在 onMounted 的 使页面到顶部，就会保持上个页面滚动条的滚动情况</p>\n<ul>\n<li>在 onActived 写一个与 onMounted 一样的逻辑</li>\n<li>页面第一次进入的时候，钩子触发的顺序是 created-&gt;mounted-&gt;activated，所以别在 mounted 和 activated 方法中写相同的逻辑代码</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">onActivated</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">documentElement</span>.<span class=\"property\">scrollTop</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">pageYOffset</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"property\">scrollTop</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>图片懒加载</p>\n<ul>\n<li>\n<p>原理：将图片的 url 放在 <code>&lt;img src=&quot;&quot; :data-src=&quot;url&quot; /&gt;</code> 的 data-src 里，当图片位于用户可视区时就将 url 放到 src 属性里</p>\n</li>\n<li>\n<p>判断图片是否位于可视区的方法:</p>\n<ol>\n<li>scroll 事件监听，用 scrollTop 等属性计算位置判断</li>\n<li>使用 Intersection Observer</li>\n<li>Intersection Observer\n<blockquote>\n<p><a href=\"https://juejin.cn/post/7080544007834730510\">https://juejin.cn/post/7080544007834730510</a> 这篇文章挺全面的</p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li>\n<p>解决方法</p>\n<blockquote>\n<p>因为 项目是 vue3 + vant，所以使用 vant 自带的 <code>&lt;van-image lazy-load&gt;&lt;/van-image&gt;</code></p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p>图片懒加载的前提下，在右滑 or 轮播图切换，及非垂直滚动时做图片预加载，增加用户体验</p>\n<ul>\n<li>\n<p>原理均类似于懒加载的原理，因为图片地址在 src 属性里时，页面就会自动加载图片资源了</p>\n</li>\n<li>\n<p><strong>轮播</strong>原理：在当前图片轮播时，就将下一张图片给加载出来，这部分是取消了懒加载啦</p>\n</li>\n<li>\n<p>实现:</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;w-100vw h-full relative&quot;</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;realPic[index]&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 轮播图 图片懒加载</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * imgs: 配置文件中的 banner 图片的链接</span></span><br><span class=\"line\"><span class=\"comment\"> * realPic: 真正页面使用的图片的链接</span></span><br><span class=\"line\"><span class=\"comment\"> * changePic: 轮播图 图片切换的时候触发函数，预先加载后一个图片</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> imgs = [];</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> item <span class=\"keyword\">of</span> board_1) &#123;</span><br><span class=\"line\">  imgs.<span class=\"title function_\">push</span>(item.<span class=\"property\">banner</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> realPic = <span class=\"title function_\">reactive</span>([imgs[<span class=\"number\">0</span>], imgs[<span class=\"number\">1</span>]]);</span><br><span class=\"line\"><span class=\"keyword\">let</span> count = <span class=\"title function_\">ref</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> changePic = <span class=\"title function_\">limit</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> img = <span class=\"keyword\">new</span> <span class=\"title class_\">Image</span>();</span><br><span class=\"line\">  img.<span class=\"property\">src</span> = imgs[count.<span class=\"property\">value</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (img.<span class=\"property\">complete</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (count.<span class=\"property\">value</span> &lt; imgs.<span class=\"property\">length</span>) &#123;</span><br><span class=\"line\">    realPic.<span class=\"title function_\">push</span>(imgs[count.<span class=\"property\">value</span>]);</span><br><span class=\"line\">    count.<span class=\"property\">value</span>++;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// console.log(realPic);</span></span><br><span class=\"line\">&#125;, imgs.<span class=\"property\">length</span> - count.<span class=\"property\">value</span>);</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p><strong>右滑</strong>原理：所以在需要预加载的图片的 src 为 一个图片数组，初始情况下，数组为空，在懒加载的图片加载完成后就把该数组用 图片 src 填满</p>\n</li>\n<li>\n<p>实现</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-if</span>=<span class=\"string\">&quot;index &lt; 4&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">van-image</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">:src</span>=<span class=\"string\">&quot;item.banner&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">class</span>=<span class=\"string\">&quot;w-full h-full&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">lazy-load</span></span></span><br><span class=\"line\"><span class=\"tag\">    @<span class=\"attr\">load</span>=<span class=\"string\">&quot;load(index)&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">  &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">van-image</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">v-else</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">van-image</span> <span class=\"attr\">:src</span>=<span class=\"string\">&quot;preimg[index]&quot;</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;w-full h-full&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">van-image</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> preimg = <span class=\"title function_\">reactive</span>([]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> load = <span class=\"title function_\">limit</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; board_2.<span class=\"property\">list</span>.<span class=\"property\">length</span>; i++) &#123;</span><br><span class=\"line\">    preimg.<span class=\"title function_\">push</span>(board_2.<span class=\"property\">list</span>[i].<span class=\"property\">banner</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, <span class=\"number\">1</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li>\n<p>计算首屏时间</p>\n<blockquote>\n<p><a href=\"https://blog.csdn.net/weixin_40599109/article/details/108622434\">https://blog.csdn.net/weixin_40599109/article/details/108622434</a></p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> t = performance.<span class=\"property\">timing</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> pageLoadTime = t.<span class=\"property\">loadEventEnd</span> - t.<span class=\"property\">navigationStart</span>;</span><br><span class=\"line\"><span class=\"comment\">// 在这里pageLoadTime就是首屏时间</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在进入同一个有 keepalive 的组件，但是要展示不同数据时，就要合理修改 reactive 的值</p>\n</li>\n</ol>\n","next":{"title":"windicss 使用","link":"workNodes/work/11 vite vue3 windicss backgroundImage"},"plink":"https://shylees.github.io/workNodes/work/12 页面跳转缓存和图片懒预加载/","copyright":{"custom":"不许转载😡！！！"},"reading_time":"1005 words in 5 min"}