{"title":"vue生命周期","date":"2021-12-09T16:00:00.000Z","date_formatted":{"ll":"Dec 10, 2021","L":"12/10/2021","MM-DD":"12-10"},"link":"furtherNotes/复习/04 vue 生命周期","tags":["vue"],"categories":["furtherNotes"],"updated":"2021-12-09T16:00:00.000Z","content":"<h2 id=\"vue-生命周期\">vue 生命周期<a title=\"#vue-生命周期\" href=\"#vue-生命周期\"></a></h2>\n<ul>\n<li>\n<p>beforeCreate：<u>data 和 methods 中的数据还没有初始化</u></p>\n</li>\n<li>\n<p>created：<u>data 和 methods 已经被初始化了</u>，<strong>要调用 methods 或 操作 data 中的数据最早只能在这</strong></p>\n</li>\n<li>\n<p>beforeMount：（模板在内存中编译好，还未挂载到页面上）<u>页面的元素还没被替换过来，还是之前的模板字符串</u>，[render 函数在这被调用，生成虚拟 DOM ]</p>\n</li>\n<li>\n<p>mounted：<u>内存中的模板已经真实的挂载到页面中</u>，是实例创建期间的最后一个生命周期，执行完 mounted 就表示实例已经被完全创建好了，<strong>要通过某些插件操作页面上的 DOM 节点，最早要在这</strong></p>\n</li>\n<li>\n<p>beforeUpdate：组件运行阶段的生命周期，<u>页面中显示的数据还未更新，但data数据是最新的</u>，[数据更新后，新的虚拟 DOM 生成，但还没跟旧虚拟 DOM 对比补丁]</p>\n</li>\n<li>\n<p>update：<u>页面和data已经保持同步了</u>，[新的虚拟 DOM 对比补丁后，进行真实 DOM 的更新]</p>\n</li>\n<li>\n<p>beforeDestory：vue实例进入销毁阶段，实例上所有的 data methods 过滤器 指令<u>都处于可用状态</u>，此时还未真正执行销毁</p>\n</li>\n<li>\n<p>destoryed：组件已经被完全销毁，此时组件中所有的 data methods… 都<u>已经不可用了</u></p>\n</li>\n<li>\n<p>activated：keep-alive 专属，组件被激活时调用</p>\n</li>\n<li>\n<p>deactivated：keep-alive 专属，组件被销毁时调用</p>\n</li>\n</ul>\n<p><strong>Q：异步请求在哪里发起？</strong></p>\n<p>可以在钩子函数 created、beforeMount、mounted 中进行异步请求，因为这三个函数中，<strong>data 已经创建，可以将服务器端返回的数据进行赋值</strong></p>\n<p>如果异步请求不需要依赖 dom 推荐在 created 函数中调用异步请求，优点有：</p>\n<ul>\n<li>能更快获取到服务器数据，减少页面 loading 时间</li>\n<li>ssr 不支持 beforeMount、mounted 钩子函数，所以放在 created 中有助于一致性</li>\n</ul>\n","prev":{"title":"单页面、多页面应用","link":"furtherNotes/复习/06 单页面应用和多页面应用"},"next":{"title":"v-if、v-for、v-show","link":"furtherNotes/复习/05 v-if 与 v-show、v-for "},"plink":"https://shylees.github.io/furtherNotes/复习/04 vue 生命周期/","toc":[{"id":"vue-生命周期","title":"vue 生命周期","index":"1"}],"copyright":{"custom":"不许转载😡！！！"},"reading_time":"477 words in 2 min"}