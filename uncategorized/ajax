<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">

    
    <title>ajax 尚硅谷 | shylees&#39; Blog</title>

    <meta name="description" content="前端学习笔记">
    <meta name="keywords" content="html,css,htm5,css3,js,JavaScript,vue,vue2.0,vue3.0">

    

    <meta property="og:locale" content="cn" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content= "ajax 尚硅谷 | shylees&#39; Blog"  />
    <meta property="og:description" content= "前端学习笔记" />
    <meta property="og:url" content="https://shylees.github.io/uncategorized/ajax" />
    <meta property="og:site_name" content="" />
    <meta property="article:author" content="shylees" />
    <meta property="article:publisher" content="" />
    <meta property="og:description" content="前端学习笔记" />
    <meta name="twitter:title" content="ajax 尚硅谷 | shylees&#39; Blog"/>
    <meta name="twitter:description" content="前端学习笔记"/>
    <script type="application/ld+json">
        {
            "description": "前端学习笔记",
            "author": { "@type": "Person", "name": "shylees" },
            "@type": "BlogPosting",
            "url": "https://shylees.github.io/uncategorized/ajax",
            "publisher": {
            "@type": "Organization",
            "logo": {
                "@type": "ImageObject",
                "url": "https://shylees.github.ioundefined"
            },
            "name": "shylees"
            },
            "headline": "ajax 尚硅谷 | shylees&#39; Blog",
            "datePublished": "2021-09-08T16:00:00.000Z",
            "mainEntityOfPage": {
                "@type": "WebPage",
                "@id": "https://shylees.github.io/uncategorized/ajax"
            },
            "@context": "http://schema.org"
        }
    </script>




    

    

    

    

    

    

    

    
<link rel="stylesheet" href="/dist/build.css?v=1646451311888.css">


    
<link rel="stylesheet" href="/dist/custom.css?v=1646451311888.css">


    <script>
        window.isPost = true
        window.aomori = {
            
            
            
        }
        window.aomori_logo_typed_animated = false
        window.aomori_search_algolia = false

    </script>

<meta name="generator" content="Hexo 5.4.1"></head>

<body>

    <div class="container">
    <header class="header">
        <div class="header-type">
            
            <div class="header-type-inner">
                
                    <a class="header-type-title" href="/">shylees&#39; Blog</a>
                
    
                
            </div>
        </div>
        <div class="header-menu">
            <div class="header-menu-inner">
                
            </div>
            <div class="header-menu-social">
                
            </div>
        </div>

        <div class="header-menu-mobile">
            <div class="header-menu-mobile-inner" id="mobile-menu-open">
                <i class="icon icon-menu"></i>
            </div>
        </div>
    </header>

    <div class="header-menu-mobile-menu">
        <div class="header-menu-mobile-menu-bg"></div>
        <div class="header-menu-mobile-menu-wrap">
            <div class="header-menu-mobile-menu-inner">
                <div class="header-menu-mobile-menu-close" id="mobile-menu-close">
                    <i class="icon icon-cross"></i>
                </div>
                <div class="header-menu-mobile-menu-list">
                    
                </div>
            </div>
        </div>
    </div>

</div>

    <div class="container">
        <div class="main">
            <section class="inner">
                <section class="inner-main">
                    <div class="post">
    <article id="post-cl1m5p1ob000098g2azj7e5y4" class="article article-type-post" itemscope
    itemprop="blogPost">

    <div class="article-inner">

        
          
        
        
        

        
        <header class="article-header">
            
  
    <h1 class="article-title" itemprop="name">
      ajax 尚硅谷
    </h1>
  

        </header>
        

        <div class="article-more-info article-more-info-post hairline">

            <div class="article-date">
  <time datetime="2021-09-08T16:00:00.000Z" itemprop="datePublished">2021-09-09</time>
</div>

            

            
            <div class="article-tag">
                <ul class="article-tag-list" itemprop="keywords"><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/ajax/" rel="tag">ajax</a></li><li class="article-tag-list-item"><a class="article-tag-list-link" href="/tags/js/" rel="tag">js</a></li></ul>
            </div>
            

            

        </div>

        <div class="article-entry post-inner-html hairline" itemprop="articleBody">
            <h1 id="ajax-尚硅谷-from-21-9-9-9-10"><a href="#ajax-尚硅谷-from-21-9-9-9-10" class="headerlink" title="ajax 尚硅谷(from 21.9.9 -9.10)"></a>ajax 尚硅谷(from 21.9.9 -9.10)</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><h3 id="1-1-ajax"><a href="#1-1-ajax" class="headerlink" title="1.1 ajax"></a>1.1 ajax</h3><p>ajax(asynchronous javascript and xml)，即异步 JS 和 XML</p>
<p>通过 ajax 可以在浏览器中向服务器发送异步请求，最大的优势 –&gt; 无刷新获取数据</p>
<p>ajax 是一种将现有标准组合在一起使用的新方式</p>
<h3 id="1-2-xml"><a href="#1-2-xml" class="headerlink" title="1.2 xml"></a>1.2 xml</h3><p>xml 可扩展标记语言</p>
<p>被设计用来传输和存储数据</p>
<p>与 html 类似，不同的是 html 中都是预定义标签，而 xml 没有预定于标签，全部是自定义标签，用了表示一些数据</p>
<h3 id="1-3-json"><a href="#1-3-json" class="headerlink" title="1.3 json"></a>1.3 json</h3><p>现在 xml 已经的传输和存储数据的功能已经被 json 取代了</p>
<h3 id="1-4-ajax-的特点"><a href="#1-4-ajax-的特点" class="headerlink" title="1.4 ajax 的特点"></a>1.4 ajax 的特点</h3><h4 id="1-4-1-优点"><a href="#1-4-1-优点" class="headerlink" title="1.4.1 优点"></a>1.4.1 优点</h4><ol>
<li>可以无需刷新页面与服务端进行通信</li>
<li>允许根据用户事件来更新部分页面内容</li>
</ol>
<h4 id="1-4-2-缺点"><a href="#1-4-2-缺点" class="headerlink" title="1.4.2 缺点"></a>1.4.2 缺点</h4><ol>
<li>没有浏览历史，不能回退</li>
<li>存在跨域问题（同源）</li>
<li>seo（爬虫） 不友好</li>
</ol>
<h2 id="2-http-报文"><a href="#2-http-报文" class="headerlink" title="2. http 报文"></a>2. http 报文</h2><h3 id="2-1-http"><a href="#2-1-http" class="headerlink" title="2.1 http"></a>2.1 http</h3><p>hypertext transport protocol 超文本传输协议，详细规定了浏览器和万维网服务器之间互相通信的规则</p>
<h3 id="2-2-请求报文"><a href="#2-2-请求报文" class="headerlink" title="2.2 请求报文"></a>2.2 请求报文</h3><blockquote>
<p>重点：格式、参数</p>
</blockquote>
<ul>
<li><p>行   : POST    /s?ie=utf-8   HTTP/1.1</p>
</li>
<li><p>头   : Host: …</p>
<p>​         Cookie: name=…</p>
<p>​         Content-type:application/x-www-form-urlencoded</p>
<p>​         User-Agent:chrome 83</p>
</li>
<li><p>空行 :</p>
</li>
<li><p>体    : username=admin&amp;password=admin</p>
</li>
</ul>
<h3 id="2-3-响应报文"><a href="#2-3-响应报文" class="headerlink" title="2.3 响应报文"></a>2.3 响应报文</h3><ul>
<li><p>行   : HTTP/1.1  200  OK</p>
</li>
<li><p>头   : Content-type: text/html;charset=utf-8</p>
<p>​         Content-length:2048</p>
<p>​         Content-encoding:gzip</p>
</li>
<li><p>空行 :</p>
</li>
<li><p>体    : <code>&lt;html&gt;....&lt;/html&gt;</code></p>
</li>
</ul>
<h3 id="2-4-network-上的请求响应"><a href="#2-4-network-上的请求响应" class="headerlink" title="2.4 network 上的请求响应"></a>2.4 network 上的请求响应</h3><ul>
<li>Headers：请求内容<ul>
<li>General</li>
<li>Response Headers：响应头和行</li>
<li>Requset Headers：请求头和行</li>
<li>Query String Parameters：请求体<ul>
<li>get ： 查询字符串的键值对</li>
<li>post：查询字符串</li>
</ul>
</li>
</ul>
</li>
<li>Preview：预览响应过来的html</li>
<li>Response：响应的内容</li>
</ul>
<h2 id="3-ajax的使用"><a href="#3-ajax的使用" class="headerlink" title="3. ajax的使用"></a>3. ajax的使用</h2><h3 id="3-1-node-express-的使用"><a href="#3-1-node-express-的使用" class="headerlink" title="3.1 node express 的使用"></a>3.1 node express 的使用</h3><p>使用node express搭建服务器</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> express <span class="keyword">from</span> <span class="string">&#x27;express&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">request, response</span>) =&gt;</span> &#123;</span><br><span class="line">  response.<span class="title function_">send</span>(<span class="string">&#x27;hello express&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;8000端口监听...&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h3 id="3-2-原生ajax使用"><a href="#3-2-原生ajax使用" class="headerlink" title="3.2 原生ajax使用"></a>3.2 原生ajax使用</h3><ol>
<li>创建对象  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br></pre></td></tr></table></figure>
</li>
<li>初始化 设置请求方法和url  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;http://127.0.0.1:8000/server&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>发送 设置参数 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="title function_">send</span>();</span><br><span class="line">xhr.<span class="title function_">send</span>(<span class="string">&#x27;a=10&amp;b=20&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li>事件绑定 处理服务端返回的结果 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;...&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>其中 readystate 是 xhr 对象的属性，<br>其值为 0:初始状态 1:open后  2:send后  3:返回部分数据 4:返回全部数据</p>
</blockquote>
<blockquote>
<p>其中 xhr的对象<br>state:状态码 statusText:状态字符串 getAllResponseHeader():所有响应头 response:响应体</p>
</blockquote>
</li>
</ol>
<ul>
<li><p>服务器端要做的操作：解决跨域问题</p>
  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>);</span><br></pre></td></tr></table></figure>
</li>
<li><p>if 设置请求头 :  在send前</p>
   <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span>)</span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;lee&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>则 要在服务器端 设置允许的响应头：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>,<span class="string">&#x27;*&#x27;</span>);</span><br></pre></td></tr></table></figure></li>
<li><p>if 处理后端传的字符串json数据</p>
<ul>
<li><p>服务器</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> data = &#123; name : <span class="string">&#x27;lee&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">let</span> str = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(data);</span><br><span class="line">response.<span class="title function_">send</span>(str)</span><br></pre></td></tr></table></figure></li>
<li><p>前端处理<br>  手动转换数据格式：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>);</span><br><span class="line">res.<span class="property">value</span> = data.<span class="property">name</span>;</span><br></pre></td></tr></table></figure>

<p>  自动转换：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在open前 设置响应体数据的类型</span></span><br><span class="line">xhr.<span class="property">responseType</span> = <span class="string">&#x27;json&#x27;</span></span><br><span class="line"><span class="comment">//在事件里直接使用就可以了</span></span><br><span class="line">res.<span class="property">value</span> = xhr.<span class="property">response</span>.<span class="property">name</span>;</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><p>解决ie缓存问题：在open中加时间戳 保证每次发生的请求都不一样</p>
<pre><code>    <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;http://127.0.0.1:8000/ie?t=&#x27;</span> + <span class="title class_">Date</span>.<span class="title function_">now</span>());</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
<li><p>处理请求异常<br> 服务器可以设置一个定时器，三秒后才返回响应<br> 在open前：</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//超时设置 </span></span><br><span class="line">xhr.<span class="property">timeout</span> = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">//超时回调 </span></span><br><span class="line">xhr.<span class="property">ontimeout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="title function_">alert</span>(<span class="string">&#x27;网络异常，请稍后重试&#x27;</span>) &#125;</span><br><span class="line"><span class="comment">//网络异常回调 可以在f12 使用offline 测试</span></span><br><span class="line">xhr.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123; <span class="title function_">alert</span>(<span class="string">&#x27;你的网络似乎出现了问题&#x27;</span>) &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>取消发送请求事件</p>
  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> x = <span class="literal">null</span>;</span><br><span class="line"><span class="comment">//发送请求 x 为 前面的xhr对象</span></span><br><span class="line"><span class="comment">//使用 x.abort() 可以取消发送请求</span></span><br><span class="line"><span class="comment">//利用这个方法可以处理 多次发送请求 只保留一个请求的情况</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="3-2-1-原生ajax案例-–-点击按钮-将响应的数据放在文本框里"><a href="#3-2-1-原生ajax案例-–-点击按钮-将响应的数据放在文本框里" class="headerlink" title="3.2.1 原生ajax案例 – 点击按钮 将响应的数据放在文本框里"></a>3.2.1 原生ajax案例 – 点击按钮 将响应的数据放在文本框里</h4><h3 id="3-3-jquery-中的-ajax"><a href="#3-3-jquery-中的-ajax" class="headerlink" title="3.3 jquery 中的 ajax"></a>3.3 jquery 中的 ajax</h3><ol>
<li>get/post请求<br>  <code>$.get/post(url, data请求携带的参数, callback成功时的回调函数, type返回数据格式)  后面三个参数可选填</code>  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.<span class="title function_">get</span>(<span class="string">&#x27;http://127.0.0.1:8000/jq-server&#x27;</span>, &#123;<span class="attr">a</span>:<span class="number">10</span>,<span class="attr">b</span>:<span class="number">20</span>&#125;, <span class="keyword">function</span>(<span class="params">data</span>)&#123;</span><br><span class="line">      <span class="title function_">log</span>(data);</span><br><span class="line">&#125;,<span class="string">&#x27;json&#x27;</span>)</span><br></pre></td></tr></table></figure>
</li>
<li>ajax通用请求  <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> $.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">      <span class="attr">url</span>:<span class="string">&#x27;http://127.0.0.1:8000/delay&#x27;</span>,   <span class="comment">//url</span></span><br><span class="line">      <span class="attr">data</span>: &#123;<span class="attr">a</span>:<span class="number">10</span>,<span class="attr">b</span>:<span class="number">20</span>&#125;,       <span class="comment">//参数</span></span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;GET&#x27;</span>,             <span class="comment">//请求类型</span></span><br><span class="line">      <span class="attr">dataType</span>:<span class="string">&#x27;json&#x27;</span>,         <span class="comment">//响应体结果</span></span><br><span class="line">      <span class="attr">success</span>:<span class="keyword">function</span>(<span class="params">data</span>)&#123;  <span class="comment">//成功回调</span></span><br><span class="line">           <span class="title function_">log</span>(data);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">timeout</span>:<span class="number">2000</span>,            <span class="comment">//超时回调</span></span><br><span class="line">      <span class="attr">error</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;...&#125;    <span class="comment">//失败回调</span></span><br><span class="line">     <span class="attr">headers</span>:&#123;...&#125;            <span class="comment">//自定义头部</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="3-4-axios"><a href="#3-4-axios" class="headerlink" title="3.4 axios"></a>3.4 axios</h3><ol>
<li><p>导入axios加载文件 bootcdn</p>
</li>
<li><p>axios可以配置 baseURL</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;http://127.0.0.1:8000&#x27;</span>;</span><br></pre></td></tr></table></figure>
</li>
<li><p>axios使用 返回promise对象<br> get请求: axios.get(url [, config] )<br> post请求: axios.post(url [, data [, config]] ) //第二个是请求体参数<br> axios请求: axios(config)</p>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> axios.<span class="title function_">get</span>(<span class="string">&#x27;/axios-server&#x27;</span>,&#123;</span><br><span class="line">       <span class="attr">params</span>:&#123;          <span class="comment">//url参数</span></span><br><span class="line">            <span class="attr">id</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">vip</span>:<span class="number">7</span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">headers</span>:&#123;         <span class="comment">//请求头信息</span></span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;lee&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>:<span class="string">&#x27;20&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span> =&gt;</span> &#123; ... &#125; )</span><br></pre></td></tr></table></figure>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> axios.<span class="title function_">post</span>(<span class="string">&#x27;/axios-server&#x27;</span>,&#123; <span class="attr">username</span>:<span class="string">&#x27;admin&#x27;</span>, <span class="attr">password</span>:<span class="string">&#x27;admin&#x27;</span> &#125;,&#123;</span><br><span class="line">       <span class="attr">params</span>:&#123;          <span class="comment">//url参数</span></span><br><span class="line">            <span class="attr">id</span>:<span class="number">100</span>,</span><br><span class="line">            <span class="attr">vip</span>:<span class="number">7</span></span><br><span class="line">       &#125;,</span><br><span class="line">       <span class="attr">headers</span>:&#123;         <span class="comment">//请求头信息</span></span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;lee&#x27;</span>,</span><br><span class="line">            <span class="attr">age</span>:<span class="string">&#x27;20&#x27;</span></span><br><span class="line">       &#125;</span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span> =&gt;</span> &#123; ... &#125; )</span><br></pre></td></tr></table></figure>
 <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">axios</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,              <span class="comment">//请求方法</span></span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/axios-server&#x27;</span>,        <span class="comment">//url</span></span><br><span class="line">    <span class="attr">params</span>:&#123;<span class="attr">id</span>:<span class="number">100</span>, <span class="attr">vip</span>:<span class="number">7</span> &#125;,    <span class="comment">//url参数</span></span><br><span class="line">    <span class="attr">headers</span>:&#123; a=<span class="number">10</span>, b=<span class="number">20</span> &#125;,     <span class="comment">//头信息</span></span><br><span class="line">    <span class="attr">data</span>:&#123; <span class="attr">username</span>:<span class="string">&#x27;admin&#x27;</span>, <span class="attr">password</span>:<span class="string">&#x27;admin&#x27;</span> &#125;,  <span class="comment">//请求体参数</span></span><br><span class="line">&#125;).<span class="title function_">then</span>( <span class="function"><span class="params">res</span> =&gt;</span> &#123; <span class="title function_">log</span>(res) &#125; )</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="3-5-fetch"><a href="#3-5-fetch" class="headerlink" title="3.5 fetch"></a>3.5 fetch</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fetch</span>(<span class="string">&#x27;http://127.0.0.1:8000/fecth-server?vip=10&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;POST&#x27;</span>,                          <span class="comment">//请求方法</span></span><br><span class="line">    <span class="attr">headers</span>:&#123; <span class="attr">name</span>:<span class="string">&#x27;lee&#x27;</span> &#125;,                 <span class="comment">//请求头</span></span><br><span class="line">    <span class="attr">body</span>:<span class="string">&#x27;username=admin&amp;password=admin&#x27;</span>    <span class="comment">//请求体</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">text</span>();  <span class="comment">//字符串</span></span><br><span class="line">    <span class="keyword">return</span> res.<span class="title function_">json</span>();  <span class="comment">//json</span></span><br><span class="line">&#125;).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>



<h2 id="4-跨域问题"><a href="#4-跨域问题" class="headerlink" title="4. 跨域问题"></a>4. 跨域问题</h2><h3 id="4-1同源策略"><a href="#4-1同源策略" class="headerlink" title="4.1同源策略"></a>4.1同源策略</h3><p>浏览器的一种安全策略</p>
<p>同源：协议、域名、端口号完全相同</p>
<p>违背同源策略就是跨域</p>
<h3 id="4-2-同源的一个例子"><a href="#4-2-同源的一个例子" class="headerlink" title="4.2 同源的一个例子"></a>4.2 同源的一个例子</h3><p>html页面跟 发送请求时同一个地址</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server.js</span></span><br><span class="line">...</span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/home&#x27;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">sendFile</span>(__dirname + <span class="string">&#x27;/index.html&#x27;</span>);  <span class="comment">//响应一个页面</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/data&#x27;</span>,<span class="function">(<span class="params">req,res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.<span class="title function_">send</span>(<span class="string">&#x27;用户数据&#x27;</span>);   <span class="comment">//请求数据</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//index.html</span></span><br><span class="line">...</span><br><span class="line">btn.<span class="property">onlick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">    <span class="comment">// 因为是同源的 所以url 可以简写</span></span><br><span class="line">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;/data&#x27;</span>);</span><br><span class="line">    xhr.<span class="title function_">send</span>();</span><br><span class="line">    xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h3 id="4-3-jsonp-原理"><a href="#4-3-jsonp-原理" class="headerlink" title="4.3 jsonp 原理"></a>4.3 jsonp 原理</h3><p>主要就是利用了 <code>script</code> 标签的<code>src</code>没有跨域限制来完成的</p>
<p>缺点：</p>
<ul>
<li>只能进行<code>GET</code>请求</li>
</ul>
<p>优点：</p>
<ul>
<li>兼容性好，在一些古老的浏览器中都可以运行</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server.js</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/jsonp&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// res.send(&#x27;console.log(hello jsonp)&#x27;)</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;lee&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">`handle(<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//html</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">handle</span>(<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">const</span> res = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">      res.<span class="property">innerHTML</span> = data.<span class="property">name</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;http://127.0.0.1:8000/jsonp&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-4-jsonp-实践"><a href="#4-4-jsonp-实践" class="headerlink" title="4.4 jsonp 实践"></a>4.4 jsonp 实践</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/jsonp-exe&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// res.send(&#x27;console.log(hello jsonp)&#x27;)</span></span><br><span class="line">  <span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="attr">exist</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">mes</span>: <span class="string">&#x27;用户名存在&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">`handle(<span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(data)&#125;</span>)`</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> p = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;p&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> input = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;input&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">function</span> <span class="title function_">handle</span>(<span class="params">data</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    input.<span class="property">style</span>.<span class="property">border</span> = <span class="string">&#x27;1px solid red&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    p.<span class="property">innerHTML</span> = data.<span class="property">mes</span>;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">  input.<span class="property">onblur</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 获取用户的输入</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> username = <span class="variable language_">this</span>.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 向服务器发送请求 检测用户是否存在</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 1.创建script</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> script = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;script&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 2.设置标签 src</span></span></span><br><span class="line"><span class="language-javascript">    script.<span class="property">src</span> = <span class="string">&#x27;http://127.0.0.1:8000/jsonp-exe&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 3.插入到dom</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(script);</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>



<h3 id="4-5-jq-jsonp"><a href="#4-5-jq-jsonp" class="headerlink" title="4.5 jq-jsonp"></a>4.5 jq-jsonp</h3><h3 id="4-6-cors"><a href="#4-6-cors" class="headerlink" title="4.6 cors"></a>4.6 cors</h3><img src="视频截图/36cors.jpg">

<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//server</span></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/cors&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="comment">// 1.设置响应头，允许跨域</span></span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">  <span class="comment">// 2.设置响应头</span></span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Headers&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">  res.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Methods&#x27;</span>, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">  <span class="comment">// 3.响应体</span></span><br><span class="line">  res.<span class="title function_">send</span>(<span class="string">&#x27;hello cors&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">const</span> text = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;textarea&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">  btn.<span class="property">onclick</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;http://127.0.0.1:8000/cors&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">    xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="number">4</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        text.<span class="property">value</span> = xhr.<span class="property">response</span></span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>


        </div>

    </div>

    

    

    

    

    

    
<nav class="article-nav">
  
    <a href="/uncategorized/hello-world" id="article-nav-newer" class="article-nav-link-wrap">
      <div class="article-nav-caption">下一篇</div>
      <div class="article-nav-title">
        
          Hello World
        
      </div>
    </a>
  
  
</nav>


    <section class="share">
        <div class="share-title">分享</div>
        <a class="share-item" target="_blank"
            href="https://twitter.com/share?text=ajax 尚硅谷 - shylees' Blog&url=https%3A%2F%2Fshylees.github.io%2Funcategorized%2Fajax">
            <box-icon type='logo' name='twitter'></box-icon>
        </a>
        <a class="share-item" target="_blank"
            href="https://www.facebook.com/sharer.php?title=ajax 尚硅谷 - shylees' Blog&u=https%3A%2F%2Fshylees.github.io%2Funcategorized%2Fajax">
            <box-icon name='facebook-square' type='logo' ></box-icon>
        </a>
        <!-- <a class="share-item" target="_blank"
            href="https://service.weibo.com/share/share.php?title=ajax 尚硅谷 - shylees' Blog&url=https://shylees.github.io/uncategorized/ajax&pic=">
            <div class="n-icon n-icon-weibo"></div>
        </a> -->
    </section>

</article>
















</div>
                </section>
            </section>

            
            <aside class="sidebar ">
                


<div class="widget" id="widget">
    
      
  <div class="widget-wrap">
    <div class="widget-inner">
      <div class="toc post-toc-html"></div>
    </div>
  </div>

    
      

    
      
  <div class="widget-wrap widget-tags">
    <div class="widget-title"><span>Tags</span></div>
    <div class="widget-inner">
      <ul class="tag-list" itemprop="keywords"><li class="tag-list-item"><a class="tag-list-link" href="/tags/ajax/" rel="tag">ajax</a></li><li class="tag-list-item"><a class="tag-list-link" href="/tags/js/" rel="tag">js</a></li></ul>
    </div>
  </div>


    
      
  <div class="widget-wrap widget-recent-posts">
    <div class="widget-title"><span>Recent Posts</span></div>
    <div class="widget-inner">
      <ul>
        
          <li>
            <a href="/uncategorized/hello-world">Hello World</a>
          </li>
        
          <li>
            <a href="/uncategorized/ajax">ajax 尚硅谷</a>
          </li>
        
      </ul>
    </div>
  </div>

    
      
  <div class="widget-wrap widget-archive">
    <div class="widget-title"><span>Archive</span></div>
    <div class="widget-inner">
      <ul class="archive-list"><li class="archive-list-item"><a class="archive-list-link" href="/archives/2022/">2022</a></li><li class="archive-list-item"><a class="archive-list-link" href="/archives/2021/">2021</a></li></ul>
    </div>
  </div>


    
</div>

<div id="backtop"><i class="icon icon-arrow-up"></i></div>
            </aside>
            
        </div>
    </div>

    <footer class="footer">
    <div class="footer-wave">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1440 320"><path fill="#3c4859" fill-opacity="1" d="M0,160L60,181.3C120,203,240,245,360,240C480,235,600,181,720,186.7C840,192,960,256,1080,261.3C1200,267,1320,213,1380,186.7L1440,160L1440,320L1380,320C1320,320,1200,320,1080,320C960,320,840,320,720,320C600,320,480,320,360,320C240,320,120,320,60,320L0,320Z"></path></svg>
    </div>

    <!-- Please do not remove this -->
    <!-- 开源不易，请勿删除 -->
    <div class="footer-wrap">
        <div class="footer-inner"> 
            shylees&#39; Blog &copy; 2022<br>
            Powered By Hexo · Theme By <a href="https://linhong.me/" target="_blank">Aomori</a> · <a href="https://github.com/lh1me/hexo-theme-aomori" target="_blank">Github</a>
        </div>
    </div>

</footer>






<script src="/dist/build.js?1646451311888.js"></script>


<script src="/dist/custom.js?1646451311888.js"></script>













</body>

</html>